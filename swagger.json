{
  "openapi": "3.0.2",
  "info": {
    "title": "DPF-APIリファレンスマニュアル",
    "version": "1.0",
    "description": "# はじめに\n\n## DPF-APIについて\nIIJ DNSプラットフォームサービスでは、DNSレコードやゾーン情報などを、\\\nお客様が用意したプログラムから自動的に操作するためのAPI機能を提供しています。\\\n以降、IIJ DNSプラットフォームサービスを「DPF」、DPFが提供するAPIを「DPF-API」あるいは単に「API」と表記します。\\\nDPF-APIの利用には、DPFの契約とIIJ IDサービスの契約が必要となります。\n\n本リファレンスマニュアルは**[OpenAPI](https://www.openapis.org/)**に準拠しています。\n\n## サポート範囲\nDPF-APIを呼び出すためのプログラム、及びそのプログラムを稼働させるためのサーバは、お客様にてご用意ください。\\\nお客様にご用意いただくプログラムの開発、利用、動作についてのお問い合わせは承ることができません。\n\n以下の事項についてのお問い合わせは、弊社**[サポートセンター](https://help.iij.ad.jp/)**にて承ります。\n- DPF-APIの挙動が本リファレンスマニュアルと異なる場合\n- DPF-APIがシステムエラーを応答した場合\n\n## 参考資料\n- IIJ DNSプラットフォームサービス オンラインマニュアル\n  - [https://manual.iij.jp/dpf/help/](https://manual.iij.jp/dpf/help/)\n\n- IIJ IDサービス オンラインマニュアル\n  - [https://manual.iij.jp/iid/admin-help/](https://manual.iij.jp/iid/admin-help/)\n\n# 利用方法\nDPF-APIは、URLとHTTPリクエストヘッダ、HTTPリクエストボディでパラメータを指定して利用します。\\\nまた、IIJ IDサービスのアクセストークンと管理対象の権限設定が必要です。\n\n## リクエスト仕様\n\n項目 | 規格\n-----|-----\nプロトコル | HTTP/1.1、HTTP/2（https）\nHTTPメソッド | GET、PATCH、POST、DELETE\nフォーマット | JSON\n文字コード | UTF-8\nタイムアウト | 300秒\n\n- httpでのリクエストは受け付けません。必ずhttpsを使用してください。\n- DPF-APIを呼び出すプログラムは、リクエスト先が正当なものであることを確認するため、SSL証明書を検証することを推奨します。\n- 短期間に極めて多数のリクエストが行われた場合、サービスの健全性を保つためにリクエストを制限する場合があります。\n\n### アクセストークン\nAPIリクエストの際にIIJ IDサービスによって発行されたアクセストークンをAuthorizationヘッダに指定する必要があります。\\\n各APIにより必要となるアクセス権の範囲（許可するスコープ）が異なるのでご注意ください。\n\nアクセストークン作成時に指定できる「許可するスコープ」は以下のとおりです。\n\n許可するスコープ | 実行できるAPI\n-----------------|------------\ndpf_read | 参照系API\ndpf_write | 更新系、及び参照系API\ndpf_contract | 契約系API\n\n発行済のアクセストークンは、**[IIJ IDサービス](https://www.auth.iij.jp/console/)**の「アクセストークンの管理」より確認できます。\\\nDPF-APIを利用する場合は「利用するリソースサーバ」の設定で「IIJ DNSサービスAPI」を選択してください。\\\nアクセストークン管理方法のマニュアルは**[こちら](https://manual.iij.jp/iid/admin-help/9054382.html)**を参照してください。\n\n### 管理対象の権限設定\nDPFでは、管理対象となるサービスやゾーン単位での参照、編集権限を細かく設定できます。\\\nアクセストークンの許可するスコープが適切であっても、管理対象の権限が付与されていない場合はAPIを実行できません。\\\n管理対象の権限設定のマニュアルは**[こちら](https://manual.iij.jp/dpf/help/19004706.html#IIJID%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%A8%E9%80%A3%E6%90%BA%E3%81%99%E3%82%8B-IIJID%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%81%B8%E7%AE%A1%E7%90%86%E6%A8%A9%E9%99%90%E3%82%92%E4%BB%98%E4%B8%8E%E3%81%99%E3%82%8B)**を参照してください。\n\n## HTTPリクエスト\n\n### 例\n```\n<HTTPメソッド> /dpf/<version>/<APIパス> HTTP/1.1\nHost: api.dns-platform.jp\nAuthorization: Bearer <access_token>\nContent-Type: application/json; charset=UTF-8\n\n<HTTPリクエストボディ: JSON形式のAPI固有のパラメータ>\n```\n\n### リクエストパラメータ\nDPF-APIで指定するパラメータは以下のとおりです。\\\nリクエストパラメータに同一のキーが含まれる場合の動作は保証されません。\n\n共通 | 指定箇所 | パラメータ | 意味\n-----|----------|------------|-----\n共通 | HTTPメソッド | HTTPメソッド | HTTPメソッド（値：GET、PATCH、POST、DELETE）\n共通 | URL | version | DPF-APIバージョン（値：v1）\n個別 | URL | APIパス | API名称やAPI個別のパラメータの組み合わせ（参照：**[API一覧](#section/API)**）\n共通 | HTTPヘッダー | access_token | IIJ IDアクセストークン（参照：**[IIJ IDサービス](https://www.auth.iij.jp/console/)**）\n個別 | HTTPボディ | APIごとに異なる | JSON形式のパラメータ（参照：**[API一覧](#section/API)**）\n\n## HTTPレスポンス\n\n### 成功レスポンス\nAPIごとにレスポンスが異なりますので、**[該当のAPI](#section/API)**を参照してください。\n\n### エラーレスポンス\nHTTPステータスコード、及びレスポンスボディによってクライアントプログラムにエラーを通知します。\n\n#### 例：アクセストークンが誤っている\n```\n{\n  \"request_id\": \"782d746ac3cb46499b31708fa80e8660\",\n  \"error_type\": \"ParameterError\",\n  \"error_message\": \"There are invalid parameters.\",\n  \"error_details\": [\n    {\n      \"code\": \"invalid\",\n      \"attribute\": \"access_token\"\n    }\n  ]\n}\n```\n\n#### エラーコード一覧\nHTTP Status Code | error_type | error_message | code | attribute | 説明 | 対処方法\n-----------------|------------|---------------|------|-----------|------|---------\n400 | ParameterError | There are invalid parameters. | invalid | access_token | 指定したアクセストークンに誤りがあります | アクセストークンを確認してください\n400 | ParameterError | JSON parse error occurred. | - | - | パラメータとして不正なJSON文字列が指定されました | リクエストのパラメータを確認してください\n400 | ParameterError | There are invalid parameters. | （API個別） | （API個別） | 不正なパラメータが指定されました | 各APIのエラーコードを確認してください\n404 | NotFound | Specified resource not found. | - | - | アクセスURLが正しくありません <br> 存在しないAPIが指定されました <br> 指定された以外のHTTPメソッドが指定されました | 左記の内容を確認してください\n429 | TooManyRequests | Too many requests. | - | - | 大量のAPIリクエストが送信されました | 単位時間当たりのAPIリクエスト数を確認してください\n500 | SystemError | System error occurred. | - | - | システム障害が発生しました | **[サポートセンター](https://help.iij.ad.jp/)**へお問い合わせください\n504 | GatewayTimeout | Gateway timeout. | - | - | リクエストがタイムアウトしました | しばらく待ってから再度リクエストしてください\n\n## 非同期リクエスト\n\nDPF-APIにおけるGET以外のAPIは全て非同期APIです。\\\n非同期APIはリクエストを受け付けると即座にレスポンスを返却しますが、\\\nリクエストに対する実際の処理は非同期で行われます。\n\n非同期リクエストの受け付けに成功した場合のHTTPステータスコードは202で、\\\n返却されたレスポンスボディには、処理進捗を確認するためのURL（jobs_url）が含まれます。\\\nこのjobs_urlに対してGETリクエストをすることで進捗状況を確認できます。\n\n進捗状況を確認した際、非同期処理が正常に終了していた場合は、\\\n返却されたレスポンスボディには、対象リソースを取得するためのURL（resources_url）が含まれます。\\\nこのresources_urlに対してGETリクエストをすることで実行結果を確認できます。\n\n### 例\n#### 非同期リクエストのレスポンス\n```\nHTTP/1.1 202 Accepted\nDate: Mon, 26 Mar 20XX hh:mm:dd GMT\nContent-Type: application/json; charset=utf-8\n〜 略 〜\n\n{\n  \"request_id\": \"782d746ac3cb46499b31708fa80e8660\",\n  \"jobs_url\": \"https://api.dns-platform.jp/dpf/<version>/jobs/<request_id>\"\n}\n```\n\n#### GETリクエスト\n```\nGET /dpf/<version>/jobs/<request_id> HTTP/1.1\nHost: api.dns-platform.jp\nAuthorization: Bearer <access_token>\nContent-Type: application/json; charset=UTF-8\n\n{}\n```\n\n#### 進捗状況のレスポンス\n```\nHTTP/1.1 200 OK\nDate: Mon, 26 Mar 20XX hh:mm:dd GMT\nContent-Type: application/json; charset=utf-8\n〜 略 〜\n\n{\n  \"request_id\": \"782d746ac3cb46499b31708fa80e8660\",\n  \"resources_url\": <resources_url>,\n  \"status\": \"SUCCESSFUL\"\n}\n```\n\n# API一覧\nDPF-APIではIIJ DNSプラットフォームサービスに関する以下の操作を行うことができます。\n\n## IIJ DNSプラットフォームサービス\n\n### cc_primaries\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/common_configs/{CommonConfigId}/cc_primaries](#tag/cc_primaries/paths/~1common_configs~1{CommonConfigId}~1cc_primaries/get) | プライマリネームサーバ設定の一覧取得 | dpf_read\n  POST | [/common_configs/{CommonConfigId}/cc_primaries](#tag/cc_primaries/paths/~1common_configs~1{CommonConfigId}~1cc_primaries/post) | プライマリネームサーバ設定の作成 | dpf_write\n  GET | [/common_configs/{CommonConfigId}/cc_primaries/{CcPrimaryId}](#tag/cc_primaries/paths/~1common_configs~1{CommonConfigId}~1cc_primaries~1{CcPrimaryId}/get) | プライマリネームサーバ設定の取得 | dpf_read\n  PATCH | [/common_configs/{CommonConfigId}/cc_primaries/{CcPrimaryId}](#tag/cc_primaries/paths/~1common_configs~1{CommonConfigId}~1cc_primaries~1{CcPrimaryId}/patch) | プライマリネームサーバ設定の更新 | dpf_write\n  DELETE | [/common_configs/{CommonConfigId}/cc_primaries/{CcPrimaryId}](#tag/cc_primaries/paths/~1common_configs~1{CommonConfigId}~1cc_primaries~1{CcPrimaryId}/delete) | プライマリネームサーバ設定の削除 | dpf_write\n\n### cc_sec_notified_servers\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/common_configs/{CommonConfigId}/cc_sec_notified_servers](#tag/cc_sec_notified_servers/paths/~1common_configs~1{CommonConfigId}~1cc_sec_notified_servers/get) | DNS NOTIFY設定の一覧取得 | dpf_read\n  POST | [/common_configs/{CommonConfigId}/cc_sec_notified_servers](#tag/cc_sec_notified_servers/paths/~1common_configs~1{CommonConfigId}~1cc_sec_notified_servers/post) | DNS NOTIFY設定の作成 | dpf_write\n  GET | [/common_configs/{CommonConfigId}/cc_sec_notified_servers/{CcSecNotifiedServerId}](#tag/cc_sec_notified_servers/paths/~1common_configs~1{CommonConfigId}~1cc_sec_notified_servers~1{CcSecNotifiedServerId}/get) | DNS NOTIFY設定の取得 | dpf_read\n  PATCH | [/common_configs/{CommonConfigId}/cc_sec_notified_servers/{CcSecNotifiedServerId}](#tag/cc_sec_notified_servers/paths/~1common_configs~1{CommonConfigId}~1cc_sec_notified_servers~1{CcSecNotifiedServerId}/patch) | DNS NOTIFY設定の更新 | dpf_write\n  DELETE | [/common_configs/{CommonConfigId}/cc_sec_notified_servers/{CcSecNotifiedServerId}](#tag/cc_sec_notified_servers/paths/~1common_configs~1{CommonConfigId}~1cc_sec_notified_servers~1{CcSecNotifiedServerId}/delete) | DNS NOTIFY設定の削除 | dpf_write\n\n### cc_sec_transfer_acls\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/common_configs/{CommonConfigId}/cc_sec_transfer_acls](#tag/cc_sec_transfer_acls/paths/~1common_configs~1{CommonConfigId}~1cc_sec_transfer_acls/get) | ゾーン転送ACLの一覧取得 | dpf_read\n  POST | [/common_configs/{CommonConfigId}/cc_sec_transfer_acls](#tag/cc_sec_transfer_acls/paths/~1common_configs~1{CommonConfigId}~1cc_sec_transfer_acls/post) | ゾーン転送ACLの作成 | dpf_write\n  GET | [/common_configs/{CommonConfigId}/cc_sec_transfer_acls/{CcSecTransferAclId}](#tag/cc_sec_transfer_acls/paths/~1common_configs~1{CommonConfigId}~1cc_sec_transfer_acls~1{CcSecTransferAclId}/get) | ゾーン転送ACLの取得 | dpf_read\n  PATCH | [/common_configs/{CommonConfigId}/cc_sec_transfer_acls/{CcSecTransferAclId}](#tag/cc_sec_transfer_acls/paths/~1common_configs~1{CommonConfigId}~1cc_sec_transfer_acls~1{CcSecTransferAclId}/patch) | ゾーン転送ACLの更新 | dpf_write\n  DELETE | [/common_configs/{CommonConfigId}/cc_sec_transfer_acls/{CcSecTransferAclId}](#tag/cc_sec_transfer_acls/paths/~1common_configs~1{CommonConfigId}~1cc_sec_transfer_acls~1{CcSecTransferAclId}/delete) | ゾーン転送ACLの削除 | dpf_write\n\n### common_configs\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/contracts/{ContractId}/common_configs](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs/get) | 共通設定の一覧取得 | dpf_read\n  POST | [/contracts/{ContractId}/common_configs](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs/post) | 共通設定の作成 | dpf_write\n  GET | [/contracts/{ContractId}/common_configs/count](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs~1count/get) | 共通設定の件数取得 | dpf_read\n  PATCH | [/contracts/{ContractId}/common_configs/default](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs~1default/patch) | 初期適用される共通設定の更新 | dpf_write\n  GET | [/contracts/{ContractId}/common_configs/{CommonConfigId}](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs~1{CommonConfigId}/get) | 共通設定の取得 | dpf_read\n  PATCH | [/contracts/{ContractId}/common_configs/{CommonConfigId}](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs~1{CommonConfigId}/patch) | 共通設定の更新 | dpf_write\n  DELETE | [/contracts/{ContractId}/common_configs/{CommonConfigId}](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs~1{CommonConfigId}/delete) | 共通設定の削除 | dpf_write\n  POST | [/contracts/{ContractId}/common_configs/{CommonConfigId}/copy](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs~1{CommonConfigId}~1copy/post) | 共通設定のコピー | dpf_write\n  PATCH | [/contracts/{ContractId}/common_configs/{CommonConfigId}/managed_dns](#tag/common_configs/paths/~1contracts~1{ContractId}~1common_configs~1{CommonConfigId}~1managed_dns/patch) | マネージドDNSサーバの状態更新 | dpf_write\n\n### contracts\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/contracts](#tag/contracts/paths/~1contracts/get) | DPF契約情報の一覧取得 | dpf_read\n  GET | [/contracts/count](#tag/contracts/paths/~1contracts~1count/get) | DPF契約情報の件数取得 | dpf_read\n  GET | [/contracts/{ContractId}](#tag/contracts/paths/~1contracts~1{ContractId}/get) | DPF契約情報の取得 | dpf_read\n  PATCH | [/contracts/{ContractId}](#tag/contracts/paths/~1contracts~1{ContractId}/patch) | DPF契約情報の更新 | dpf_write\n\n### contract_partners\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/contracts/{ContractId}/contract_partners](#tag/contract_partners/paths/~1contracts~1{ContractId}~1contract_partners/get) | DPF連携サービスの一覧取得 | dpf_read\n\n### logs (contracts)\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/contracts/{ContractId}/logs](#tag/logs-(contracts)/paths/~1contracts~1{ContractId}~1logs/get) | DPF契約操作ログの一覧取得 | dpf_read\n  GET | [/contracts/{ContractId}/logs/count](#tag/logs-(contracts)/paths/~1contracts~1{ContractId}~1logs~1count/get) | DPF契約操作ログの件数取得 | dpf_read\n\n### qps\nHTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/contracts/{ContractId}/qps/histories](#tag/qps/paths/~1contracts~1{ContractId}~1qps~1histories/get) | 月別のQPSの一覧取得 | dpf_read\n\n### tsigs\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/contracts/{ContractId}/tsigs](#tag/tsigs/paths/~1contracts~1{ContractId}~1tsigs/get) | TSIG鍵の一覧取得 | dpf_read\n  POST | [/contracts/{ContractId}/tsigs](#tag/tsigs/paths/~1contracts~1{ContractId}~1tsigs/post) | TSIG鍵の作成 | dpf_write\n  GET | [/contracts/{ContractId}/tsigs/count](#tag/tsigs/paths/~1contracts~1{ContractId}~1tsigs~1count/get) | TSIG鍵の件数取得 | dpf_read\n  GET | [/contracts/{ContractId}/tsigs/{TsigId}](#tag/tsigs/paths/~1contracts~1{ContractId}~1tsigs~1{TsigId}/get) | TSIG鍵の取得 | dpf_read\n  PATCH | [/contracts/{ContractId}/tsigs/{TsigId}](#tag/tsigs/paths/~1contracts~1{ContractId}~1tsigs~1{TsigId}/patch) | TSIG鍵の更新 | dpf_write\n  DELETE | [/contracts/{ContractId}/tsigs/{TsigId}](#tag/tsigs/paths/~1contracts~1{ContractId}~1tsigs~1{TsigId}/delete) | TSIG鍵の削除 | dpf_write\n  GET | [/contracts/{ContractId}/tsigs/{TsigId}/common_configs](#tag/tsigs/paths/~1contracts~1{ContractId}~1tsigs~1{TsigId}~1common_configs/get) | TSIG鍵を利用している共通設定の一覧取得 | dpf_read\n  GET | [/contracts/{ContractId}/tsigs/{TsigId}/common_configs/count](#tag/tsigs/paths/~1contracts~1{ContractId}~1tsigs~1{TsigId}~1common_configs~1count/get) | TSIG鍵を利用している共通設定の件数取得 | dpf_read\n\n### zones (contracts)\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/contracts/{ContractId}/zones](#tag/zones-(contracts)/paths/~1contracts~1{ContractId}~1zones/get) | DPF契約に紐付くゾーンの一覧取得 | dpf_read\n  PATCH | [/contracts/{ContractId}/zones/common_configs](#tag/zones-(contracts)/paths/~1contracts~1{ContractId}~1zones~1common_configs/patch) | DPF契約に紐付くゾーンの共通設定の更新 | dpf_write\n  GET | [/contracts/{ContractId}/zones/count](#tag/zones-(contracts)/paths/~1contracts~1{ContractId}~1zones~1count/get) | DPF契約に紐付くゾーンの件数取得 | dpf_read\n\n## IIJマネージドDNSサービス\n\n### default_ttl\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/zones/{ZoneId}/default_ttl](#tag/default_ttl/paths/~1zones~1{ZoneId}~1default_ttl/get) | デフォルトTTLの取得 | dpf_read\n  PATCH | [/zones/{ZoneId}/default_ttl](#tag/default_ttl/paths/~1zones~1{ZoneId}~1default_ttl/patch) | デフォルトTTLの更新 | dpf_write\n  DELETE | [/zones/{ZoneId}/default_ttl/changes](#tag/default_ttl/paths/~1zones~1{ZoneId}~1default_ttl~1changes/delete) | 編集中デフォルトTTLの取消 | dpf_write\n  GET | [/zones/{ZoneId}/default_ttl/diffs](#tag/default_ttl/paths/~1zones~1{ZoneId}~1default_ttl~1diffs/get) | デフォルトTTLの編集差分の取得 | dpf_read\n\n### dnssec\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/zones/{ZoneId}/dnssec](#tag/dnssec/paths/~1zones~1{ZoneId}~1dnssec/get) | DNSSEC情報の取得 | dpf_read\n  PATCH | [/zones/{ZoneId}/dnssec](#tag/dnssec/paths/~1zones~1{ZoneId}~1dnssec/patch) | DNSSEC情報の更新 | dpf_write\n  PATCH | [/zones/{ZoneId}/dnssec/ksk_rollover](#tag/dnssec/paths/~1zones~1{ZoneId}~1dnssec~1ksk_rollover/patch) | KSKロールオーバーの開始 | dpf_write\n\n### ds_records\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/zones/{ZoneId}/ds_records](#tag/ds_records/paths/~1zones~1{ZoneId}~1ds_records/get) | DSレコードの一覧取得 | dpf_read\n\n### logs (zones)\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/zones/{ZoneId}/logs](#tag/logs-(zones)/paths/~1zones~1{ZoneId}~1logs/get) | ゾーン操作ログの一覧取得 | dpf_read\n  GET | [/zones/{ZoneId}/logs/count](#tag/logs-(zones)/paths/~1zones~1{ZoneId}~1logs~1count/get) | ゾーン操作ログの件数取得 | dpf_read\n\n### records\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/zones/{ZoneId}/records](#tag/records/paths/~1zones~1{ZoneId}~1records/get) | レコードの一覧取得 | dpf_read\n  POST | [/zones/{ZoneId}/records](#tag/records/paths/~1zones~1{ZoneId}~1records/post) | レコードの作成 | dpf_write\n  GET | [/zones/{ZoneId}/records/count](#tag/records/paths/~1zones~1{ZoneId}~1records~1count/get) | レコードの件数取得 | dpf_read\n  GET | [/zones/{ZoneId}/records/currents](#tag/records/paths/~1zones~1{ZoneId}~1records~1currents/get) | DNS反映済レコードの一覧取得 | dpf_read\n  GET | [/zones/{ZoneId}/records/currents/count](#tag/records/paths/~1zones~1{ZoneId}~1records~1currents~1count/get) | DNS反映済レコードの件数取得 | dpf_read\n  GET | [/zones/{ZoneId}/records/diffs](#tag/records/paths/~1zones~1{ZoneId}~1records~1diffs/get) | レコードの編集差分の一覧取得 | dpf_read\n  GET | [/zones/{ZoneId}/records/diffs/count](#tag/records/paths/~1zones~1{ZoneId}~1records~1diffs~1count/get) | レコードの編集差分の件数取得 | dpf_read\n  GET | [/zones/{ZoneId}/records/{RecordId}](#tag/records/paths/~1zones~1{ZoneId}~1records~1{RecordId}/get) | レコードの取得 | dpf_read\n  PATCH | [/zones/{ZoneId}/records/{RecordId}](#tag/records/paths/~1zones~1{ZoneId}~1records~1{RecordId}/patch) | レコードの更新 | dpf_write\n  DELETE | [/zones/{ZoneId}/records/{RecordId}](#tag/records/paths/~1zones~1{ZoneId}~1records~1{RecordId}/delete) | レコードの削除 | dpf_write\n  DELETE | [/zones/{ZoneId}/records/{RecordId}/changes](#tag/records/paths/~1zones~1{ZoneId}~1records~1{RecordId}~1changes/delete) | 編集中レコードの取消 | dpf_write\n\n### zone_histories\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/zones/{ZoneId}/zone_histories](#tag/zone_histories/paths/~1zones~1{ZoneId}~1zone_histories/get) | ゾーン反映履歴の一覧取得 | dpf_read\n  GET | [/zones/{ZoneId}/zone_histories/count](#tag/zone_histories/paths/~1zones~1{ZoneId}~1zone_histories~1count/get) | ゾーン反映履歴の件数取得 | dpf_read\n  GET | [/zones/{ZoneId}/zone_histories/{ZoneHistoryId}/text](#tag/zone_histories/paths/~1zones~1{ZoneId}~1zone_histories~1{ZoneHistoryId}~1text/get) | ゾーン反映時のRFC1035形式のテキストの取得 | dpf_read\n\n### zone_proxy\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/zones/{ZoneId}/zone_proxy](#tag/zone_proxy/paths/~1zones~1{ZoneId}~1zone_proxy/get) | ゾーンプロキシ設定の取得 | dpf_read\n  PATCH | [/zones/{ZoneId}/zone_proxy](#tag/zone_proxy/paths/~1zones~1{ZoneId}~1zone_proxy/patch) | ゾーンプロキシ設定の更新 | dpf_write\n  GET | [/zones/{ZoneId}/zone_proxy/health_check](#tag/zone_proxy/paths/~1zones~1{ZoneId}~1zone_proxy~1health_check/get) | プライマリネームサーバのヘルスチェック結果の取得 | dpf_read\n\n### zones\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/zones](#tag/zones/paths/~1zones/get) | ゾーンの一覧取得 | dpf_read\n  GET | [/zones/count](#tag/zones/paths/~1zones~1count/get) | ゾーンの件数取得 | dpf_read\n  GET | [/zones/{ZoneId}](#tag/zones/paths/~1zones~1{ZoneId}/get) | ゾーンの取得 | dpf_read\n  PATCH | [/zones/{ZoneId}](#tag/zones/paths/~1zones~1{ZoneId}/patch) | ゾーンの更新 | dpf_write\n  PATCH | [/zones/{ZoneId}/changes](#tag/zones/paths/~1zones~1{ZoneId}~1changes/patch) | 編集中レコードのゾーン反映 | dpf_write\n  DELETE | [/zones/{ZoneId}/changes](#tag/zones/paths/~1zones~1{ZoneId}~1changes/delete) | 編集中レコードの一括取消 | dpf_write\n  GET | [/zones/{ZoneId}/contract](#tag/zones/paths/~1zones~1{ZoneId}~1contract/get) | ゾーンに紐付くDPF契約情報の取得 | dpf_read\n  GET | [/zones/{ZoneId}/managed_dns_servers](#tag/zones/paths/~1zones~1{ZoneId}~1managed_dns_servers/get) | マネージドDNSサーバの一覧取得 | dpf_read\n\n## サービス共通\n\n### delegations\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/delegations](#tag/delegations/paths/~1delegations/get) | ネームサーバ申請候補の一覧取得 | dpf_read\n  POST | [/delegations](#tag/delegations/paths/~1delegations/post) | ネームサーバ申請 | dpf_write\n  GET | [/delegations/count](#tag/delegations/paths/~1delegations~1count/get) | ネームサーバ申請候補の件数取得 | dpf_read\n\n### jobs\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/jobs/{RequestId}](#tag/jobs/paths/~1jobs~1{RequestId}/get) | 非同期リクエストの状態確認 | dpf_read\n\n### ping\n  HTTPメソッド | API | 機能 | 許可するスコープ\n  -----------|-----|-----|--------------\n  GET | [/ping](#tag/ping/paths/~1ping/get) | API疎通確認 | dpf_read, dpf_write, dpf_contract\n"
  },
  "servers": [
    {
      "url": "https://api.dns-platform.jp/dpf/v1",
      "description": "API endpoint"
    }
  ],
  "tags": [
    {
      "name": "cc_primaries",
      "description": "プライマリネームサーバの操作ができます。\\\nプライマリネームサーバの状態（enabled）は以下のとおりです。\n\n### enabled\n値 | 意味 | 備考\n---|------|-----\n0 | 無効 |\n1 | 有効 |\n"
    },
    {
      "name": "cc_sec_notified_servers",
      "description": "DNS NOTIFYの操作ができます。\n"
    },
    {
      "name": "cc_sec_transfer_acls",
      "description": "ゾーン転送ACLの操作ができます。\n"
    },
    {
      "name": "common_configs",
      "description": "複数のゾーンで共通の設定内容を使用するための共通設定を操作できます。\\\nマネージドDNSサーバの状態（managed_dns_enabled）、初期適用の共通設定（default）は以下のとおりです。\n\n### managed_dns_enabled\n値 | 意味 | 備考\n---|------|-----\n0 | 無効 |\n1 | 有効 |\n\n### default\n値 | 意味 | 備考\n---|------|-----\n0 | 無効 |\n1 | 有効 |\n"
    },
    {
      "name": "contracts",
      "description": "DPF契約の操作ができます。\\\n契約プラン（plan）、契約の状態（state）、お気に入りの状態（favorite）は以下のとおりです。\n\n### plan\n値 | 意味 | 備考\n---|------|-----\n 1 | ベーシック |\n 2 | プレミアム |\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 1 | 利用開始前 |\n 2 | 利用中 |\n\n### favorite\n値 | 意味 | 備考\n---|------|-----\n 1 | 表示優先度高 |\n 2 | 表示優先度低 |\n"
    },
    {
      "name": "contract_partners",
      "description": "DPF契約の連携しているサービス情報の操作ができます。\n"
    },
    {
      "name": "logs (contracts)",
      "description": "DPF契約を操作したログを取得できます。\\\n取得可能なログは90日前までとなります。\\\n操作内容（operation）、ログの種別（log_type）、処理の状態（status）は以下のとおりです。\n\n### operation\n値 | 意味 | 備考\n---|------|-----\nadd_cc_primary | プライマリネームサーバ設定の作成 |\nupdate_cc_primary | プライマリネームサーバ設定の更新 |\ndelete_cc_primary | プライマリネームサーバ設定の削除 |\nadd_cc_sec_notified_server | DNS NOTIFY設定の作成 |\nupdate_cc_sec_notified_server | DNS NOTIFY設定の更新 |\ndelete_cc_sec_notified_server | DNS NOTIFY設定の削除 |\nadd_cc_sec_transfer_acl | ゾーン転送ACLの作成 |\nupdate_cc_sec_transfer_acl | ゾーン転送ACLの更新 |\ndelete_cc_sec_transfer_acl | ゾーン転送ACLの削除 |\ncreate_common_config | 共通設定の作成 |\nswitch_default_common_config | 初期適用される共通設定の更新 |\nupdate_common_config | 共通設定の更新 |\ndelete_common_config | 共通設定の削除 |\ncopy_common_config | 共通設定のコピー |\nupdate_managed_dns_state | マネージドDNSサーバの状態更新 |\nupdate_contract_description | DPF契約情報のコメントの更新 |\nupdate_contract_favorite | DPF契約情報のお気に入り状態の更新 |\napply_common_config | DPF契約に紐付くゾーンの共通設定の更新 |\ncreate_contract_partnership | IIJ IDサービスとの連携 |\ndelete_contract_partnership | IIJ IDサービスとの連携解除 |\ncreate_tsig | TSIG鍵の作成 |\nupdate_tsig | TSIG鍵の更新 |\ndelete_tsig | TSIG鍵の削除 |\n\n### log_type\n値 | 意味 | 備考\n---|------|-----\nservice | サービス設定の操作 |\ncommon_config | 共通設定の操作 |\n\n### status\n値 | 意味 | 備考\n---|------|-----\nstart | 処理開始 |\nsuccess | 処理正常終了 |\nfailure | 処理失敗 |\nretry | リトライ |\n"
    },
    {
      "name": "qps",
      "description": ""
    },
    {
      "name": "tsigs",
      "description": "TSIG鍵の操作ができます。\\\nハッシュアルゴリズム（algorithm）は以下のとおりです。\n\n### algorithm\n値 | 意味 | 備考\n---|------|-----\n0 | HMAC-SHA256 |\n"
    },
    {
      "name": "zones (contracts)",
      "description": "DPF契約に紐付くゾーンの操作ができます。\\\nゾーンの状態（state）、お気に入りの状態（favorite）、ゾーンプロキシの状態（zone_proxy_enabled）の詳細な説明は、**[zones](#tag/zones)**を参照してください。\n"
    },
    {
      "name": "default_ttl",
      "description": "契約に紐づくゾーンのデフォルトTTLの操作ができます。\\\nデフォルトTTLの状態（state）は以下のとおりです。\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 0 | 反映済み |\n 3 | 更新予定 |\n 5 | 更新前の状態 |\n"
    },
    {
      "name": "dnssec",
      "description": "DNSSECの操作ができます。\\\nDNSSECの有効状態（enabled）、DNSSECの状態（state）、DSレコードの状態（ds_state）は以下のとおりです。\n\n### enabled\n値 | 意味 | 備考\n---|------|-----\n0 | 無効 |\n1 | 有効 |\n\n### state\n値 | 意味 | 備考\n---|------|-----\n0 | ゾーン公開前 |\n1 | 有効化作業中 |\n2 | 有効 |\n3 | 無効化作業中 |\n4 | 無効 |\n\n### ds_state\n値 | 意味 | 備考\n---|------|-----\n0 | 公開前 |\n1 | DSレコード登録待ち   |\n2 | DSレコード登録反映待ち |\n3 | DSレコード公開中 |\n4 | ロールオーバー準備中 |\n5 | DSレコード変更待ち |\n6 | DSレコード変更反映待ち |\n7 | DSレコード削除待ち |\n8 | DSレコード削除反映待ち |\n"
    },
    {
      "name": "ds_records",
      "description": ""
    },
    {
      "name": "logs (zones)",
      "description": "契約に紐付くゾーンを操作したログを取得できます。\\\n取得可能なログは90日前までとなります。\\\n操作内容（operation）、ログの種別（log_type）、処理の状態（status）は以下のとおりです。\n\n### operation\n値 | 意味 | 備考\n---|------|-----\nupdating_default_ttl | デフォルトTTLの更新 |\ndismiss_default_ttl_change | 編集中デフォルトTTLの取消 |\nupdate_dnssec_configuration | DNSSEC情報の更新 |\nbegin_ksk_rollover | KSKロールオーバーの開始 |\nadding_record | レコードの作成 |\nupdating_record | レコードの更新 |\ndeleting_record | レコードの削除 |\ndismiss_record_change | 編集中レコードの取消 |\nupdate_zone_proxy | ゾーンプロキシ設定の更新 |\nupdate_zone_description | ゾーンのコメントの更新 |\nupdate_zone_favorite | ゾーンのお気に入り状態の更新 |\ncommit_zone | 編集中レコードのゾーン反映 |\nupload_zone | ゾーンファイルのアップロード |\ndismiss_zone_edits | 編集中レコードの一括取消 |\ncreate_delegations | ネームサーバ申請 |\n\n### log_type\n値 | 意味 | 備考\n---|------|-----\nservice | サービス設定の操作 |\nrecord | レコードの操作 |\ndnssec | DNSSEC設定の操作 |\n\n### status\n値 | 意味 | 備考\n---|------|-----\nstart | 処理開始 |\nsuccess | 処理正常終了 |\nfailure | 処理失敗 |\nretry | リトライ |\n"
    },
    {
      "name": "records",
      "description": "契約に紐付くゾーンのレコード操作ができます。\\\nレコード操作の状態（state）は以下のとおりです。\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 0 | 反映済み |\n 1 | 追加予定 |\n 2 | 削除予定 |\n 3 | 更新予定 |\n 5 | 更新前の状態 |\n"
    },
    {
      "name": "zone_histories",
      "description": "当日を含めて90日前までのゾーン反映の履歴を確認できます。\\\n確認のタイミングにより、それ以前の履歴を確認できる場合があります。\n"
    },
    {
      "name": "zone_proxy",
      "description": "ゾーンプロキシの操作ができます。\\\nゾーンプロキシの状態（enabled）、ゾーン転送の状態（state）は以下のとおりです。\n\n### enabled\n値 | 意味 | 備考\n---|------|-----\n 0 | 無効 |\n 1 | 有効 |\n\n### state\n値 | 意味 | 備考\n---|------|-----\n OK | ゾーン転送成功 |\n NG | ゾーン転送失敗 |\n"
    },
    {
      "name": "zones",
      "description": "DPF契約に紐付くゾーンの操作ができます。\\\nゾーンの状態（state）、お気に入りの状態（favorite）、ゾーンプロキシの状態（zone_proxy_enabled）は以下のとおりです。\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 1 | 公開前 |\n 2 | 公開 |\n\n### favorite\n値 | 意味 | 備考\n---|------|-----\n 1 | 表示優先度高 |\n 2 | 表示優先度低 |\n\n### zone_proxy_enabled\n値 | 意味 | 備考\n---|------|-----\n 0 | 無効 |\n 1 | 有効 |\n"
    },
    {
      "name": "delegations",
      "description": "ネームサーバ申請の操作ができます。\\\nお気に入りの状態（favorite）、ネームサーバの状態（requested）は以下のとおりです。\n\n### favorite\n値 | 意味 | 備考\n---|------|-----\n1 | 表示優先度高 |\n2 | 表示優先度低 |\n\n### requested\n値 | 意味 | 備考\n---|------|-----\n0 | 未申請 |\n1 | 申請済み |\n"
    },
    {
      "name": "jobs",
      "description": "非同期リクエストの状態確認ができます。\\\nリクエストの状態（status）は以下のとおりです。\n\n### status\n値 | 意味 | 備考\n---|------|-----\nRUNNING | 処理中 |\nSUCCESSFUL | 正常終了 |\nFAILED | 異常終了 |\n"
    },
    {
      "name": "ping",
      "description": ""
    }
  ],
  "x-tagGroups": [
    {
      "name": "IIJ DNSプラットフォームサービス",
      "tags": [
        "cc_primaries",
        "cc_sec_notified_servers",
        "cc_sec_transfer_acls",
        "common_configs",
        "contracts",
        "contract_partners",
        "logs (contracts)",
        "qps",
        "tsigs",
        "zones (contracts)"
      ]
    },
    {
      "name": "IIJマネージドDNSサービス",
      "tags": [
        "default_ttl",
        "dnssec",
        "ds_records",
        "logs (zones)",
        "records",
        "zone_histories",
        "zone_proxy",
        "zones"
      ]
    },
    {
      "name": "サービス共通",
      "tags": [
        "delegations",
        "jobs",
        "ping"
      ]
    }
  ],
  "paths": {
    "/common_configs/{CommonConfigId}/cc_primaries": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "summary": "プライマリネームサーバ設定の一覧取得",
        "description": "プライマリネームサーバの設定の一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "cc_primaries"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcPrimaries"
                },
                "examples": {
                  "GetCcPrimaries": {
                    "$ref": "#/components/examples/GetCcPrimaries"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "プライマリネームサーバ設定の作成",
        "description": "新しくプライマリネームサーバを作成します。\\\n作成できる最大件数は5件です。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_primaries"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCcPrimary"
              },
              "examples": {
                "PostCcPrimaries": {
                  "$ref": "#/components/examples/PostCcPrimary"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTSIG鍵を確認してください\ninvalid | address | 指定したaddressを確認してください\ntoo_many | address | 登録の上限数を超えています\nduplicated | address | 既に登録されています\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_primaries/{CcPrimaryId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        },
        {
          "$ref": "#/components/parameters/CcPrimaryId"
        }
      ],
      "get": {
        "summary": "プライマリネームサーバ設定の取得",
        "description": "指定したCcPrimaryIdのプライマリネームサーバを取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "cc_primaries"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcPrimary"
                },
                "examples": {
                  "GetCcPrimary": {
                    "$ref": "#/components/examples/GetCcPrimary"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_primary | 指定したCcPrimaryIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "プライマリネームサーバ設定の更新",
        "description": "指定したCcPrimaryIdのプライマリネームサーバを更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_primaries"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCcPrimary"
              },
              "examples": {
                "PatchCcPrimary": {
                  "$ref": "#/components/examples/PatchCcPrimary"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_primary | 指定したCcPrimaryIdを確認してください\nnot_found | tsig | 指定したTSIGを確認してください\ninvalid | address | 指定したaddressを確認してください\nduplicated | address | 指定したaddressを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "プライマリネームサーバ設定の削除",
        "description": "指定したCcPrimaryIdのプライマリネームサーバを削除します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_primaries"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_primary | 指定したCcPrimaryIdを確認してください\nforbidden | cc_primary | 有効のため削除できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_sec_notified_servers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "summary": "DNS NOTIFY設定の一覧取得",
        "description": "DNS NOTIFYの設定の一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcSecNotifiedServers"
                },
                "examples": {
                  "GetCcSecNotifiedServers": {
                    "$ref": "#/components/examples/GetCcSecNotifiedServers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "DNS NOTIFY設定の作成",
        "description": "新しくDNS NOFITYを作成します。\\\n作成できる最大件数は256件です。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCcSecNotifiedServer"
              },
              "examples": {
                "PostCcSecNotifiedServers": {
                  "$ref": "#/components/examples/PostCcSecNotifiedServer"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTSIG鍵を確認してください\ninvalid | address | 指定したaddressを確認してください\ntoo_many | address | 登録の上限数を超えています\nduplicated | address | 既に登録されています\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_sec_notified_servers/{CcSecNotifiedServerId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        },
        {
          "$ref": "#/components/parameters/CcSecNotifiedServerId"
        }
      ],
      "get": {
        "summary": "DNS NOTIFY設定の取得",
        "description": "指定したCcSecNotifiedServerIdのDNS NOTIFYを取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcSecNotifiedServer"
                },
                "examples": {
                  "GetCcSecNotifiedServer": {
                    "$ref": "#/components/examples/GetCcSecNotifiedServer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_notified_server | 指定したCcSecNotifiedServerIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "DNS NOTIFY設定の更新",
        "description": "指定したCcSecNotifiedServerIdのDNS NOTIFYを更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCcSecNotifiedServer"
              },
              "examples": {
                "PatchCcSecNotifiedServer": {
                  "$ref": "#/components/examples/PatchCcSecNotifiedServer"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_notified_server | 指定したCcSecNotifiedServerIdを確認してください\nnot_found | tsig | 指定したTSIGを確認してください\ninvalid | address | 指定したaddressを確認してください\nduplicated | address | 指定したaddressを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "DNS NOTIFY設定の削除",
        "description": "指定したCcSecNotifiedServerIdのDNS NOTIFYを削除します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_notified_server | 指定したCcSecNotifiedServerIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_sec_transfer_acls": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "summary": "ゾーン転送ACLの一覧取得",
        "description": "ゾーン転送ACLの設定の一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcSecTransferAcls"
                },
                "examples": {
                  "GetCcSecTransferAcls": {
                    "$ref": "#/components/examples/GetCcSecTransferAcls"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "ゾーン転送ACLの作成",
        "description": "新しくゾーン転送ACLを作成します。\\\n作成できる最大件数は5件です。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCcSecTransferAcl"
              },
              "examples": {
                "PostCcSecTransferAcls": {
                  "$ref": "#/components/examples/PostCcSecTransferAcl"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTSIG鍵を確認してください\ninvalid | network | 指定したnetworkを確認してください\ntoo_many | network | 登録の上限数を超えています\nduplicated | network | 指定したnetworkを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_sec_transfer_acls/{CcSecTransferAclId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        },
        {
          "$ref": "#/components/parameters/CcSecTransferAclId"
        }
      ],
      "get": {
        "summary": "ゾーン転送ACLの取得",
        "description": "指定したCcSecTransferAclIdのゾーン転送ACLを取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcSecTransferAcl"
                },
                "examples": {
                  "GetCcSecTransferAcl": {
                    "$ref": "#/components/examples/GetCcSecTransferAcl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_transfer_acl | 指定したCcSecTransferAclIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "ゾーン転送ACLの更新",
        "description": "指定したCcSecTransferAclIdのゾーン転送ACLを更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCcSecTransferAcl"
              },
              "examples": {
                "PatchCcSecTransferAcl": {
                  "$ref": "#/components/examples/PatchCcSecTransferAcl"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_transfer_acl | 指定したCcSecTransferAclIdを確認してください\nnot_found | tsig | 指定したTSIGを確認してください\ninvalid | network | 指定したnetworkを確認してください\nduplicated | network | 指定したnetworkを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "ゾーン転送ACLの削除",
        "description": "指定したCcSecTransferAclIdのゾーン転送ACLを削除します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_transfer_acl | 指定したCcSecTransferAclIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "共通設定の一覧取得",
        "description": "共通設定の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "common_configs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommonConfigs"
                },
                "examples": {
                  "GetCommonConfigs": {
                    "$ref": "#/components/examples/GetCommonConfigs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "共通設定の作成",
        "description": "新しく共通設定を作成します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "common_configs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCommonConfig"
              },
              "examples": {
                "PostCommonConfig": {
                  "$ref": "#/components/examples/PostCommonConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nduplicated | name | 指定したnameを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "共通設定の件数取得",
        "description": "共通設定の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "common_configs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/default": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "patch": {
        "summary": "初期適用される共通設定の更新",
        "description": "ゾーンを新規追加した場合に、自動で適用される共通設定を切り替えます。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "common_configs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDefaultCommonConfig"
              },
              "examples": {
                "PatchDefaultCommonConfig": {
                  "$ref": "#/components/examples/PatchDefaultCommonConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/{CommonConfigId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "summary": "共通設定の取得",
        "description": "指定したCommonConfigIdの共通設定を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "common_configs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommonConfig"
                },
                "examples": {
                  "GetCommonConfig": {
                    "$ref": "#/components/examples/GetCommonConfig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "共通設定の更新",
        "description": "指定したCommonConfigIdの共通設定を更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "common_configs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCommonConfig"
              },
              "examples": {
                "PatchCommonConfig": {
                  "$ref": "#/components/examples/PatchCommonConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nduplicated | name | 指定したnameを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "共通設定の削除",
        "description": "指定したCommonConfigIdの共通設定を削除します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "common_configs"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nforbidden | common_config | 参照元が存在しているため削除できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/{CommonConfigId}/copy": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "post": {
        "summary": "共通設定のコピー",
        "description": "指定した共通設定と同じ内容の共通設定を別の共通設定名で作成します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "common_configs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCommonConfig"
              },
              "examples": {
                "PostCommonConfig": {
                  "$ref": "#/components/examples/PostCommonConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nduplicated | name | 指定したnameを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/{CommonConfigId}/managed_dns": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "patch": {
        "summary": "マネージドDNSサーバの状態更新",
        "description": "マネージドDNSサーバをプライマリネームサーバとして有効もしくは無効とするかの切り替えを行えます。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "common_configs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchManagedDns"
              },
              "examples": {
                "PatchManagedDns": {
                  "$ref": "#/components/examples/PatchManagedDns"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/contract_partners": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "DPF連携サービスの一覧取得",
        "description": "DPFが連携しているサービスの一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "contract_partners"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractPartners"
                },
                "examples": {
                  "GetContractPartners": {
                    "$ref": "#/components/examples/GetContractPartners"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | contract | 指定したContractIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "summary": "DPF契約情報の一覧取得",
        "description": "DPF契約情報の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "contracts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsPlan"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsState"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContracts"
                },
                "examples": {
                  "GetContracts": {
                    "$ref": "#/components/examples/GetContracts"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/count": {
      "get": {
        "summary": "DPF契約情報の件数取得",
        "description": "DPF契約の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "contracts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsPlan"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsState"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "DPF契約情報の取得",
        "description": "指定したContractIdのDPF契約を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "contracts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContract"
                },
                "examples": {
                  "GetContract": {
                    "$ref": "#/components/examples/GetContract"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "DPF契約情報の更新",
        "description": "指定したContractIdのDPF契約を更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "contracts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchContract"
              },
              "examples": {
                "PatchContract": {
                  "$ref": "#/components/examples/PatchContract"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/zones": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "DPF契約に紐付くゾーンの一覧取得",
        "description": "指定したContractIdのDPF契約に紐付くゾーンの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zones (contracts)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesState"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZoneProxyEnabled"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZones"
                },
                "examples": {
                  "GetZones": {
                    "$ref": "#/components/examples/GetZones"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/zones/common_configs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "patch": {
        "summary": "DPF契約に紐付くゾーンの共通設定の更新",
        "description": "指定したContractIdの共通設定を切り替えます。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "zones (contracts)"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchContractsZones"
              },
              "examples": {
                "PatchCommonConfig": {
                  "$ref": "#/components/examples/PatchContractsZones"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定した共通設定を確認してください\nnot_found | zones | 指定したゾーンを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/zones/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "DPF契約に紐付くゾーンの件数取得",
        "description": "指定したContractIdのDPF契約に紐付くゾーンの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zones (contracts)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesState"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZoneProxyEnabled"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/default_ttl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "デフォルトTTLの取得",
        "description": "デフォルトTTLの一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "default_ttl"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultTtl"
                },
                "examples": {
                  "GetDefaultTtl": {
                    "$ref": "#/components/examples/GetDefaultTtl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "デフォルトTTLの更新",
        "description": "デフォルトTTLを更新します。\\\n**[編集中レコードのゾーン反映](#tag/zones/paths/~1zones~1{ZoneId}~1changes/patch)**を実行するまでは権威サーバには反映されません。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "default_ttl"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDefaultTtl"
              },
              "examples": {
                "PatchDefaultTtl": {
                  "$ref": "#/components/examples/PatchDefaultTtl"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/default_ttl/changes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "delete": {
        "summary": "編集中デフォルトTTLの取消",
        "description": "デフォルトTTLの操作を取消します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "default_ttl"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | default_ttl | デフォルトTTLの状態を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/default_ttl/diffs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "デフォルトTTLの編集差分の取得",
        "description": "現在DNSに登録されているデフォルトTTLと反映予定のデフォルトTTLの差分一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "default_ttl"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultTtlDiffs"
                },
                "examples": {
                  "GetDiffs": {
                    "$ref": "#/components/examples/GetDiffsDefaultTtl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delegations": {
      "get": {
        "summary": "ネームサーバ申請候補の一覧取得",
        "description": "ネームサーバとして申請可能なゾーンの候補の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "delegations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsDelegationsRequested"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegations"
                },
                "examples": {
                  "GetDelegations": {
                    "$ref": "#/components/examples/GetDelegations"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "ネームサーバ申請",
        "description": "指定したゾーンを申請します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "delegations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDelegations"
              },
              "examples": {
                "PostDelegations": {
                  "$ref": "#/components/examples/PostDelegations"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zones | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delegations/count": {
      "get": {
        "summary": "ネームサーバ申請候補の件数取得",
        "description": "ネームサーバとして申請可能なゾーンの候補の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "delegations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsDelegationsRequested"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/dnssec": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "DNSSEC情報の取得",
        "description": "DNSSEC情報の一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "dnssec"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDnssec"
                },
                "examples": {
                  "GetDnssec": {
                    "$ref": "#/components/examples/GetDnssec"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "DNSSEC情報の更新",
        "description": "DNSSECの情報を更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "dnssec"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDnssec"
              },
              "examples": {
                "PatchDnssec": {
                  "$ref": "#/components/examples/PatchDnssec"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | dnssec | DNSSECの状態を確認してください\nresolve_error | dnssec | DNSSECの状態を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/dnssec/ksk_rollover": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "patch": {
        "summary": "KSKロールオーバーの開始",
        "description": "指定したゾーンに対してKSKロールオーバーを開始します。\\\nロールオーバーはds_stateが「3」の場合のみ開始できます。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "dnssec"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | dnssec | DNSSECの状態を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/ds_records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "DSレコードの一覧取得",
        "description": "上位のネームサーバに登録が必要なDSレコードを取得できます。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "ds_records"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDsRecords"
                },
                "examples": {
                  "GetDsRecords": {
                    "$ref": "#/components/examples/GetDsRecords"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{RequestId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/RequestId"
        }
      ],
      "get": {
        "summary": "非同期リクエストの状態確認",
        "description": "ジョブの進捗状況を取得します。\\\nこのAPIの詳しい利用方法は、**[非同期リクエスト](#section/利用方法/非同期リクエスト)**を参照してください。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "jobs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobs"
                },
                "examples": {
                  "GetJobsRunning": {
                    "$ref": "#/components/examples/GetJobsRunning"
                  },
                  "GetJobsSuccessful": {
                    "$ref": "#/components/examples/GetJobsSuccessful"
                  },
                  "GetJobsFailed": {
                    "$ref": "#/components/examples/GetJobsFailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | request_id | 指定したRequestIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "DPF契約操作ログの一覧取得",
        "description": "DPF契約を操作したログの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "logs (contracts)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/LogsOffset"
          },
          {
            "$ref": "#/components/parameters/LogsLimit"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractsLogs"
                },
                "examples": {
                  "GetContractsLogs": {
                    "$ref": "#/components/examples/GetContractsLogs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/logs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "DPF契約操作ログの件数取得",
        "description": "DPF契約を操作したログの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "logs (contracts)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "ゾーン操作ログの一覧取得",
        "description": "ゾーンを操作したログの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "logs (zones)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/LogsOffset"
          },
          {
            "$ref": "#/components/parameters/LogsLimit"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZonesLogs"
                },
                "examples": {
                  "GetContractsLogs": {
                    "$ref": "#/components/examples/GetZonesLogs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/logs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "ゾーン操作ログの件数取得",
        "description": "ゾーンを操作したログの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "logs (zones)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "API疎通確認",
        "description": "APIへの疎通を確認できます。\n\n### Authorizations\ndpf_read\\\ndpf_write\\\ndpf_contract\n",
        "tags": [
          "ping"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPing"
                },
                "examples": {
                  "GetPing": {
                    "$ref": "#/components/examples/GetPing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/qps/histories": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "月別のQPSの一覧取得",
        "description": "DPF契約の月別のQPSを取得できます。\\\nDPF契約に紐付くゾーンの月別のQPSと、\\\nゾーンのクエリ数を元に集計したDPF契約の月別のQPSが取得できます。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "qps"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQpsHistories"
                },
                "examples": {
                  "GetQps": {
                    "$ref": "#/components/examples/GetQpsHistories"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "レコードの一覧取得",
        "description": "レコード情報の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "records"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecords"
                },
                "examples": {
                  "GetRecords": {
                    "$ref": "#/components/examples/GetRecords"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "レコードの作成",
        "description": "新しくレコードを作成します。\\\n**[編集中レコードのゾーン反映](#tag/zones/paths/~1zones~1{ZoneId}~1changes/patch)**を実行するまでは権威サーバには反映されません。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "records"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostRecord"
              },
              "examples": {
                "PostRecord": {
                  "$ref": "#/components/examples/PostRecord"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | record | レコードとして不正な形式です\nduplicated | record | 同一nameおよびrrtypeのレコードがすでに作成されています\ninvalid | name | 指定したnameを確認してください\ncname_and_other_mixed | name | 指定したnameがCNAMEと同一です\ncorresponding_ns_not_found | name | 指定したDSレコードのnameに対応するNSレコードが存在していません\ninvalid_quotes | rdata | TXTレコードのrdataは「\"」で囲むようにしてください\ninvalid | rdata | 指定したrdataを確認してください\nreference_not_found | rdata | 参照先が存在しません\nreference_alias | rdata | 指定した参照先がCNAMEです\nmultiple_rdata_found | rdata | 指定したレコードタイプでは複数のrdataを指定することはできません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "レコードの件数取得",
        "description": "レコード情報の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "records"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/currents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "DNS反映済レコードの一覧取得",
        "description": "現在DNSに登録されているレコードの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "records"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecords"
                },
                "examples": {
                  "GetRecords": {
                    "$ref": "#/components/examples/GetRecords"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/currents/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "DNS反映済レコードの件数取得",
        "description": "現在DNSに登録されているレコードの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "records"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/diffs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "レコードの編集差分の一覧取得",
        "description": "現在DNSに登録されているレコードと反映予定のレコードの差分一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "records"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecordsDiffs"
                },
                "examples": {
                  "GetRecordsDiffs": {
                    "$ref": "#/components/examples/GetRecordsDiffs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/diffs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "レコードの編集差分の件数取得",
        "description": "現在DNSに登録されているレコードと反映予定のレコードの差分数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "records"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/{RecordId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        },
        {
          "$ref": "#/components/parameters/RecordId"
        }
      ],
      "get": {
        "summary": "レコードの取得",
        "description": "指定したRecordIdのレコードを取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "records"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecord"
                },
                "examples": {
                  "GetRecord": {
                    "$ref": "#/components/examples/GetRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "レコードの更新",
        "description": "指定したRecordIdのレコードを更新します。\\\n**[編集中レコードのゾーン反映](#tag/zones/paths/~1zones~1{ZoneId}~1changes/patch)**を実行するまでは権威サーバには反映されません。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "records"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRecord"
              },
              "examples": {
                "PatchRecord": {
                  "$ref": "#/components/examples/PatchRecord"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\nforbidden | record | レコードの状態を確認してください\ninvalid | record | レコードとして不正な形式です\ninvalid_quotes | rdata | TXTレコードのrdataは「\"」で囲むようにしてください\ninvalid | rdata | 指定したrdataを確認してください\nreference_not_found | rdata | 参照先が存在しません\nreference_alias | rdata | 指定した参照先がCNAMEです\nmultiple_rdata_found | rdata | 指定したレコードタイプでは複数のrdataを指定することはできません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "レコードの削除",
        "description": "指定したRecordIdのレコードを削除します。\\\n**[編集中レコードのゾーン反映](#tag/zones/paths/~1zones~1{ZoneId}~1changes/patch)**を実行するまでは権威サーバには反映されません。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "records"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\nforbidden | record | レコードの状態を確認してください\nsoa_not_found | record | SOAレコードの削除はできません\napex_ns_not_found | record | Zone APEXのNSレコードのため削除はできません\ncorresponding_ns_not_found | name | 同一nameのDSレコードが存在するためNSレコードの削除はできません\nreference_not_found | rdata | 参照先が存在しないため削除できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/{RecordId}/changes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        },
        {
          "$ref": "#/components/parameters/RecordId"
        }
      ],
      "delete": {
        "summary": "編集中レコードの取消",
        "description": "指定したRecordIdのレコードの操作を取消します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "records"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\nforbidden | record | レコードの状態を確認してください\nduplicated | record | 同一nameおよびrrtypeのレコードがすでに存在しています\ncname_and_other_mixed | name | 指定したNameがCNAMEと同一のため操作できません\ncorresponding_ns_not_found | name | 指定したDSレコードのnameに対応するNSレコードが存在していません\ninvalid | rrtype | 指定したrrtypeを確認してください\nreference_not_found | rdata | 参照先が存在しないレコードが存在するため取り消しできません\nreference_alias | rdata | 指定した参照先がCNAMEです\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "TSIG鍵の一覧取得",
        "description": "TSIG鍵情報の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "tsigs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTsigs"
                },
                "examples": {
                  "GetTsigs": {
                    "$ref": "#/components/examples/GetTsigs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "TSIG鍵の作成",
        "description": "新しくTSIG鍵を作成します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "tsigs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTsig"
              },
              "examples": {
                "PostTsigs": {
                  "$ref": "#/components/examples/PostTsig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nduplicated | name | 指定したnameを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "summary": "TSIG鍵の件数取得",
        "description": "TSIG鍵の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "tsigs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs/{TsigId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/TsigId"
        }
      ],
      "get": {
        "summary": "TSIG鍵の取得",
        "description": "指定したTsigIdのTSIG鍵を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "tsigs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTsig"
                },
                "examples": {
                  "GetTsig": {
                    "$ref": "#/components/examples/GetTsig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "TSIG鍵の更新",
        "description": "指定したTsigIdのTSIG鍵を更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "tsigs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTsig"
              },
              "examples": {
                "PatchTsig": {
                  "$ref": "#/components/examples/PatchTsig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "TSIG鍵の削除",
        "description": "指定したTsigIdのTSIG鍵を削除します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "tsigs"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\nforbidden | tsig | 参照元が存在しているため削除できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs/{TsigId}/common_configs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/TsigId"
        }
      ],
      "get": {
        "summary": "TSIG鍵を利用している共通設定の一覧取得",
        "description": "指定したTSIG鍵を使用している共通設定の一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "tsigs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTsigsCommonConfigs"
                },
                "examples": {
                  "GetCommonConfigs": {
                    "$ref": "#/components/examples/GetCommonConfigsTsig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs/{TsigId}/common_configs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/TsigId"
        }
      ],
      "get": {
        "summary": "TSIG鍵を利用している共通設定の件数取得",
        "description": "指定したTSIG鍵を使用している共通設定の件数を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "tsigs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_histories": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "ゾーン反映履歴の一覧取得",
        "description": "ゾーン反映の履歴の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zone_histories"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/Order"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneHistories"
                },
                "examples": {
                  "GetZoneHistories": {
                    "$ref": "#/components/examples/GetZoneHistories"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_histories/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "ゾーン反映履歴の件数取得",
        "description": "ゾーン反映の履歴の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zone_histories"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_histories/{ZoneHistoryId}/text": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        },
        {
          "$ref": "#/components/parameters/ZoneHistoryId"
        }
      ],
      "get": {
        "summary": "ゾーン反映時のRFC1035形式のテキストの取得",
        "description": "ゾーン反映の履歴をRFC1035形式のテキストファイルで取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zone_histories"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneHistoriesText"
                },
                "examples": {
                  "GetZoneHistoriesText": {
                    "$ref": "#/components/examples/GetZoneHistoriesText"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | zone_history | 指定したZoneHistoryIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_proxy": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "ゾーンプロキシ設定の取得",
        "description": "ゾーンプロキシの設定を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zone_proxy"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneProxy"
                },
                "examples": {
                  "GetZoneProxy": {
                    "$ref": "#/components/examples/GetZoneProxy"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "ゾーンプロキシ設定の更新",
        "description": "ゾーンプロキシの設定を更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "zone_proxy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchZoneProxy"
              },
              "examples": {
                "PatchZoneProxy": {
                  "$ref": "#/components/examples/PatchZoneProxy"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | zone | 編集中のレコードが存在しているため有効化できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_proxy/health_check": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "プライマリネームサーバのヘルスチェック結果の取得",
        "description": "ゾーン転送のヘルスチェック結果の一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zone_proxy"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneProxyHealth"
                },
                "examples": {
                  "GetZoneProxyHealth": {
                    "$ref": "#/components/examples/GetHealthCheck"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones": {
      "get": {
        "summary": "ゾーンの一覧取得",
        "description": "DPF契約に紐付くゾーンの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesState"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZoneProxyEnabled"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZones"
                },
                "examples": {
                  "GetZones": {
                    "$ref": "#/components/examples/GetZones"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/count": {
      "get": {
        "summary": "ゾーンの件数取得",
        "description": "DPF契約に紐付くゾーンの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesState"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZoneProxyEnabled"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "ゾーンの取得",
        "description": "指定したZoneIdのゾーンを取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zones"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZone"
                },
                "examples": {
                  "GetZone": {
                    "$ref": "#/components/examples/GetZone"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "ゾーンの更新",
        "description": "指定したZoneIdのゾーンを更新します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "zones"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchZone"
              },
              "examples": {
                "PatchZone": {
                  "$ref": "#/components/examples/PatchZone"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/changes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "patch": {
        "summary": "編集中レコードのゾーン反映",
        "description": "編集中のレコードの操作を反映します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "zones"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchZoneCommit"
              },
              "examples": {
                "PatchZoneCommit": {
                  "$ref": "#/components/examples/PatchZoneCommit"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\nreference_not_found | rdata | rdetaの参照先が存在しません\nresolve_error | rdata | 名前解決ができないゾーンが含まれています\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "編集中レコードの一括取消",
        "description": "編集中のレコードの操作を一括で取り消します。\n\n### Authorizations\ndpf_write\n",
        "tags": [
          "zones"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/contract": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "ゾーンに紐付くDPF契約情報の取得",
        "description": "指定したZoneIdのゾーンに紐付くDPF契約情報を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zones"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContract"
                },
                "examples": {
                  "GetContract": {
                    "$ref": "#/components/examples/GetContract"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/managed_dns_servers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "summary": "マネージドDNSサーバの一覧取得",
        "description": "指定したZoneIdのマネージドDNSサーバの一覧を取得します。\n\n### Authorizations\ndpf_read\n",
        "tags": [
          "zones"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManagedServers"
                },
                "examples": {
                  "GetManagedServers": {
                    "$ref": "#/components/examples/GetManagedServers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "RequestId": {
        "name": "RequestId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/RequestId"
        }
      },
      "ContractId": {
        "name": "ContractId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SystemId"
        }
      },
      "TsigId": {
        "name": "TsigId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CommonConfigId": {
        "name": "CommonConfigId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CcSecTransferAclId": {
        "name": "CcSecTransferAclId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CcSecNotifiedServerId": {
        "name": "CcSecNotifiedServerId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CcPrimaryId": {
        "name": "CcPrimaryId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "ZoneId": {
        "name": "ZoneId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SystemId"
        }
      },
      "RecordId": {
        "name": "RecordId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SystemId"
        }
      },
      "ZoneHistoryId": {
        "name": "ZoneHistoryId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "StartDate": {
        "name": "start_date",
        "description": "開始日",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchDate"
        }
      },
      "EndDate": {
        "name": "end_date",
        "description": "終了日",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchDate"
        }
      },
      "TimeZone": {
        "name": "time_zone",
        "description": "タイムゾーン",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchTimeZone"
        }
      },
      "Order": {
        "name": "order",
        "description": "ソート順",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchOrder"
        }
      },
      "LogsOffset": {
        "name": "offset",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLogsOffset"
        }
      },
      "LogsLimit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLogsLimit"
        }
      },
      "Type": {
        "name": "type",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchType"
        }
      },
      "Offset": {
        "name": "offset",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchOffset"
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLimit"
        }
      },
      "KeywordsFullText": {
        "name": "_keywords_full_text[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsServiceCode": {
        "name": "_keywords_service_code[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsContractsPlan": {
        "name": "_keywords_plan[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractPlan"
        }
      },
      "KeywordsContractsState": {
        "name": "_keywords_state[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractState"
        }
      },
      "KeywordsContractsFavorite": {
        "name": "_keywords_favorite[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractFavorite"
        }
      },
      "KeywordsDescription": {
        "name": "_keywords_description[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsName": {
        "name": "_keywords_name[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsNetwork": {
        "name": "_keywords_network[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsZonesState": {
        "name": "_keywords_state[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesState"
        }
      },
      "KeywordsZonesFavorite": {
        "name": "_keywords_favorite[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesFavorite"
        }
      },
      "KeywordsContractsLogsLogType": {
        "name": "_keywords_log_type[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractsLogsLogType"
        }
      },
      "KeywordsOperator": {
        "name": "_keywords_operator[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsContractsLogsOperation": {
        "name": "_keywords_operation[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractsLogsOperation"
        }
      },
      "KeywordsTarget": {
        "name": "_keywords_target[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsDetail": {
        "name": "_keywords_detail[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsRequestId": {
        "name": "_keywords_request_id[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsContractsLogsStatus": {
        "name": "_keywords_status[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractsLogsStatus"
        }
      },
      "KeywordsDelegationsRequested": {
        "name": "_keywords_requested[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/DelegationsRequested"
        }
      },
      "KeywordsZonesLogsLogType": {
        "name": "_keywords_log_type[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesLogsType"
        }
      },
      "KeywordsZonesLogsOperation": {
        "name": "_keywords_operation[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesLogsOperation"
        }
      },
      "KeywordsZonesLogsStatus": {
        "name": "_keywords_status[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesLogsStatus"
        }
      },
      "KeywordsTtl": {
        "name": "_keywords_ttl[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/RecordsTtl"
        }
      },
      "KeywordsRrtype": {
        "name": "_keywords_rrtype[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/RecordsRrtype"
        }
      },
      "KeywordsRdata": {
        "name": "_keywords_rdata[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsCommonConfigId": {
        "name": "_keywords_common_config_id[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "KeywordsZoneProxyEnabled": {
        "name": "_keywords_zone_proxy_enabled[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZoneProxyEnabled"
        }
      }
    },
    "schemas": {
      "RequestId": {
        "type": "string",
        "minLength": 32,
        "maxLength": 32
      },
      "SystemId": {
        "type": "string",
        "minLength": 14,
        "maxLength": 14
      },
      "TsigId": {
        "type": "integer",
        "nullable": true,
        "minimum": 1,
        "format": "int64"
      },
      "Id": {
        "type": "integer",
        "minimum": 1,
        "format": "int64"
      },
      "ServiceCode": {
        "type": "string",
        "minLength": 11,
        "maxLength": 11
      },
      "LogDateTime": {
        "type": "string",
        "format": "date-time"
      },
      "LogTarget": {
        "type": "string",
        "nullable": false,
        "default": ""
      },
      "Description": {
        "type": "string",
        "description": "コメント",
        "default": "",
        "minLength": 0,
        "maxLength": 80
      },
      "Operator": {
        "type": "string",
        "description": "編集者",
        "default": null
      },
      "JobsUrl": {
        "type": "string"
      },
      "Network": {
        "type": "string",
        "nullable": true
      },
      "ErrorType": {
        "type": "string"
      },
      "ErrorMessage": {
        "type": "string"
      },
      "ErrorDetails": {
        "type": "array",
        "minLength": 1,
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "attribute": {
              "type": "string"
            }
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "required": [
          "request_id",
          "error_type",
          "error_message",
          "error_details"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "error_type": {
            "$ref": "#/components/schemas/ErrorType"
          },
          "error_message": {
            "$ref": "#/components/schemas/ErrorMessage"
          },
          "error_details": {
            "$ref": "#/components/schemas/ErrorDetails"
          }
        }
      },
      "GetCount": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "type": "object",
            "required": [
              "count"
            ],
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "AsyncResponse": {
        "type": "object",
        "required": [
          "request_id",
          "jobs_url"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "jobs_url": {
            "$ref": "#/components/schemas/JobsUrl"
          }
        }
      },
      "SearchType": {
        "type": "string",
        "default": "AND",
        "enum": [
          "AND",
          "OR"
        ]
      },
      "SearchOffset": {
        "type": "integer",
        "format": "int32",
        "default": 0,
        "minimum": 0,
        "maximum": 10000000
      },
      "SearchLimit": {
        "type": "integer",
        "format": "int32",
        "default": 100,
        "minimum": 1,
        "maximum": 10000
      },
      "SearchDate": {
        "type": "string",
        "format": "full-date",
        "default": null
      },
      "SearchTimeZone": {
        "type": "string",
        "format": "time-numoffset",
        "default": "+00:00"
      },
      "SearchOrder": {
        "type": "string",
        "default": "ASC",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "KeywordsString": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "items": {
          "type": "string",
          "maxLength": 255
        }
      },
      "SearchLogsOffset": {
        "type": "integer",
        "format": "int32",
        "default": 0,
        "minimum": 0,
        "maximum": 9900
      },
      "SearchLogsLimit": {
        "type": "integer",
        "format": "int32",
        "default": 100,
        "minimum": 1,
        "maximum": 100
      },
      "CcPrimaryAddress": {
        "type": "string",
        "description": "IPアドレス"
      },
      "CcPrimaryEnabled": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/cc_primaries)**",
        "enum": [
          0,
          1
        ]
      },
      "CcPrimary": {
        "type": "object",
        "required": [
          "id",
          "address",
          "tsig_id",
          "enabled"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "address": {
            "$ref": "#/components/schemas/CcPrimaryAddress"
          },
          "tsig_id": {
            "$ref": "#/components/schemas/Id"
          },
          "enabled": {
            "$ref": "#/components/schemas/CcPrimaryEnabled"
          }
        }
      },
      "GetCcPrimaries": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CcPrimary"
            }
          }
        }
      },
      "PostCcPrimary": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "address": {
            "$ref": "#/components/schemas/CcPrimaryAddress"
          }
        }
      },
      "GetCcPrimary": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/CcPrimary"
          }
        }
      },
      "PatchCcPrimary": {
        "type": "object",
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "address": {
            "$ref": "#/components/schemas/CcPrimaryAddress"
          },
          "enabled": {
            "$ref": "#/components/schemas/CcPrimaryEnabled"
          }
        }
      },
      "CcNotifiedServerAddress": {
        "type": "string",
        "description": "IPアドレス"
      },
      "NotifiedServer": {
        "type": "object",
        "required": [
          "id",
          "address",
          "tsig_id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "address": {
            "$ref": "#/components/schemas/CcNotifiedServerAddress"
          },
          "tsig_id": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "GetCcSecNotifiedServers": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/NotifiedServer"
            }
          }
        }
      },
      "PostCcSecNotifiedServer": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "address": {
            "$ref": "#/components/schemas/CcNotifiedServerAddress"
          }
        }
      },
      "GetCcSecNotifiedServer": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/NotifiedServer"
          }
        }
      },
      "PatchCcSecNotifiedServer": {
        "type": "object",
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "address": {
            "$ref": "#/components/schemas/CcNotifiedServerAddress"
          }
        }
      },
      "CcSecTransferNetwork": {
        "type": "string",
        "description": "IPアドレス/プレフィックス長"
      },
      "CcSecTransferAcl": {
        "type": "object",
        "required": [
          "id",
          "network",
          "tsig_id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "network": {
            "$ref": "#/components/schemas/CcSecTransferNetwork"
          },
          "tsig_id": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "GetCcSecTransferAcls": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CcSecTransferAcl"
            }
          }
        }
      },
      "PostCcSecTransferAcl": {
        "type": "object",
        "required": [
          "network"
        ],
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "network": {
            "$ref": "#/components/schemas/CcSecTransferNetwork"
          }
        }
      },
      "GetCcSecTransferAcl": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/CcSecTransferAcl"
          }
        }
      },
      "PatchCcSecTransferAcl": {
        "type": "object",
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "network": {
            "$ref": "#/components/schemas/CcSecTransferNetwork"
          }
        }
      },
      "ManagedDnsEnabled": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/common_configs)**",
        "enum": [
          0,
          1
        ]
      },
      "CommonConfigDefault": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/common_configs)**",
        "enum": [
          0,
          1
        ]
      },
      "CommonConfigName": {
        "type": "string",
        "description": "name",
        "minLength": 1,
        "maxLength": 80
      },
      "CommonConfig": {
        "type": "object",
        "required": [
          "id",
          "name",
          "managed_dns_enabled",
          "default",
          "description"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "$ref": "#/components/schemas/CommonConfigName"
          },
          "managed_dns_enabled": {
            "$ref": "#/components/schemas/ManagedDnsEnabled"
          },
          "default": {
            "$ref": "#/components/schemas/CommonConfigDefault"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetCommonConfigs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CommonConfig"
            }
          }
        }
      },
      "PostCommonConfig": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CommonConfigName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetCommonConfig": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/CommonConfig"
          }
        }
      },
      "PatchDefaultCommonConfig": {
        "type": "object",
        "required": [
          "common_config_id"
        ],
        "properties": {
          "common_config_id": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "PatchCommonConfig": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CommonConfigName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "PatchManagedDns": {
        "type": "object",
        "required": [
          "managed_dns_enabled"
        ],
        "properties": {
          "managed_dns_enabled": {
            "$ref": "#/components/schemas/ManagedDnsEnabled"
          }
        }
      },
      "GetContractPartners": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "service_code"
              ],
              "properties": {
                "service_code": {
                  "$ref": "#/components/schemas/ServiceCode"
                }
              }
            }
          }
        }
      },
      "PatchContractsZones": {
        "type": "object",
        "required": [
          "common_config_id",
          "zone_ids"
        ],
        "properties": {
          "common_config_id": {
            "$ref": "#/components/schemas/Id"
          },
          "zone_ids": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/SystemId"
            }
          }
        }
      },
      "ContractState": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/contracts)**",
        "enum": [
          1,
          2
        ]
      },
      "ContractFavorite": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/contracts)**",
        "enum": [
          1,
          2
        ]
      },
      "ContractPlan": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/contracts)**",
        "enum": [
          1,
          2
        ]
      },
      "Contract": {
        "type": "object",
        "required": [
          "id",
          "service_code",
          "state",
          "favorite",
          "plan",
          "description"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "state": {
            "$ref": "#/components/schemas/ContractState"
          },
          "favorite": {
            "$ref": "#/components/schemas/ContractFavorite"
          },
          "plan": {
            "$ref": "#/components/schemas/ContractPlan"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetContracts": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          }
        }
      },
      "GetContract": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "PatchContract": {
        "type": "object",
        "properties": {
          "favorite": {
            "$ref": "#/components/schemas/ContractFavorite"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "ContractsLogsOperation": {
        "type": "string",
        "description": "詳細説明は**[こちら](#tag/logs-(contracts))**",
        "enum": [
          "add_cc_primary",
          "update_cc_primary",
          "delete_cc_primary",
          "add_cc_sec_notified_server",
          "update_cc_sec_notified_server",
          "delete_cc_sec_notified_server",
          "add_cc_sec_transfer_acl",
          "update_cc_sec_transfer_acl",
          "delete_cc_sec_transfer_acl",
          "create_common_config",
          "switch_default_common_config",
          "update_common_config",
          "delete_common_config",
          "copy_common_config",
          "update_managed_dns_state",
          "update_contract_description",
          "update_contract_favorite",
          "apply_common_config",
          "create_contract_partnership",
          "delete_contract_partnership",
          "create_tsig",
          "update_tsig",
          "delete_tsig"
        ]
      },
      "ContractsLogsStatus": {
        "type": "string",
        "description": "詳細説明は**[こちら](#tag/logs-(contracts))**",
        "enum": [
          "start",
          "success",
          "failure",
          "retry"
        ]
      },
      "ContractsLogsLogType": {
        "type": "string",
        "description": "詳細説明は**[こちら](#tag/logs-(contracts))**",
        "enum": [
          "service",
          "common_config"
        ]
      },
      "ContractsLog": {
        "type": "object",
        "required": [
          "time",
          "log_type",
          "operator",
          "operation",
          "target",
          "request_id",
          "status"
        ],
        "properties": {
          "time": {
            "$ref": "#/components/schemas/LogDateTime"
          },
          "log_type": {
            "$ref": "#/components/schemas/ContractsLogsLogType"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "operation": {
            "$ref": "#/components/schemas/ContractsLogsOperation"
          },
          "target": {
            "$ref": "#/components/schemas/LogTarget"
          },
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "status": {
            "$ref": "#/components/schemas/ContractsLogsStatus"
          }
        }
      },
      "GetContractsLogs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ContractsLog"
            }
          }
        }
      },
      "DefaultTtlValue": {
        "type": "integer",
        "description": "TTL",
        "minimum": 1,
        "maximum": 2147483647
      },
      "DefaultTtlState": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/default_ttl)**",
        "enum": [
          0,
          3,
          5
        ]
      },
      "DefaultTtl": {
        "type": "object",
        "required": [
          "value",
          "state",
          "operator"
        ],
        "properties": {
          "value": {
            "$ref": "#/components/schemas/DefaultTtlValue"
          },
          "state": {
            "$ref": "#/components/schemas/DefaultTtlState"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          }
        }
      },
      "GetDefaultTtl": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/DefaultTtl"
          }
        }
      },
      "PatchDefaultTtl": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/components/schemas/DefaultTtlValue"
          }
        }
      },
      "GetDefaultTtlDiffs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "new",
                "old"
              ],
              "properties": {
                "new": {
                  "$ref": "#/components/schemas/DefaultTtl"
                },
                "old": {
                  "$ref": "#/components/schemas/DefaultTtl"
                }
              }
            }
          }
        }
      },
      "Qps": {
        "type": "integer",
        "minimum": 0
      },
      "QpsName": {
        "type": "string",
        "nullable": true
      },
      "QpsMonth": {
        "type": "string",
        "description": "集計対象月(YYYY-MM)"
      },
      "QpsHistory": {
        "type": "object",
        "required": [
          "service_code",
          "name",
          "values"
        ],
        "properties": {
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "name": {
            "$ref": "#/components/schemas/QpsName"
          },
          "values": {
            "type": "array",
            "minItems": 12,
            "maxItems": 12,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/QpsValue"
            }
          }
        }
      },
      "QpsValue": {
        "type": "object",
        "required": [
          "month",
          "qps"
        ],
        "properties": {
          "month": {
            "$ref": "#/components/schemas/QpsMonth"
          },
          "qps": {
            "$ref": "#/components/schemas/Qps"
          }
        }
      },
      "GetQpsHistories": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/QpsHistory"
            }
          }
        }
      },
      "TsigsName": {
        "type": "string"
      },
      "TsigsPostName": {
        "type": "string",
        "description": "先頭末尾がハイフン以外の[a-z0-9]とハイフンで構成された文字列が使用できます",
        "minLength": 1,
        "maxLength": 63
      },
      "TsigsAlgorithm": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/tsigs)**",
        "enum": [
          0
        ]
      },
      "TsigsSecret": {
        "type": "string"
      },
      "Tsig": {
        "type": "object",
        "required": [
          "id",
          "name",
          "algorithm",
          "secret",
          "description"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "$ref": "#/components/schemas/TsigsName"
          },
          "algorithm": {
            "$ref": "#/components/schemas/TsigsAlgorithm"
          },
          "secret": {
            "$ref": "#/components/schemas/TsigsSecret"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetTsigs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Tsig"
            }
          }
        }
      },
      "PostTsig": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/TsigsPostName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetTsig": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Tsig"
          }
        }
      },
      "PatchTsig": {
        "type": "object",
        "required": [
          "description"
        ],
        "properties": {
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetTsigsCommonConfigs": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CommonConfig"
            }
          }
        }
      },
      "DnssecEnabled": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/dnssec)**",
        "enum": [
          0,
          1
        ]
      },
      "DnssecState": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/dnssec)**",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "DnssecDsState": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/dnssec)**",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ]
      },
      "Dnssec": {
        "type": "object",
        "required": [
          "enabled",
          "state",
          "ds_state"
        ],
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/DnssecEnabled"
          },
          "state": {
            "$ref": "#/components/schemas/DnssecState"
          },
          "ds_state": {
            "$ref": "#/components/schemas/DnssecDsState"
          }
        }
      },
      "GetDnssec": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Dnssec"
          }
        }
      },
      "PatchDnssec": {
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/DnssecEnabled"
          }
        }
      },
      "DsRecordsRrset": {
        "type": "string"
      },
      "DsRecordsTransitedAt": {
        "type": "string",
        "format": "date-time"
      },
      "DsRecord": {
        "type": "object",
        "required": [
          "rrset",
          "transited_at"
        ],
        "properties": {
          "rrset": {
            "$ref": "#/components/schemas/DsRecordsRrset"
          },
          "transited_at": {
            "$ref": "#/components/schemas/DsRecordsTransitedAt"
          }
        }
      },
      "GetDsRecords": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/DsRecord"
            }
          }
        }
      },
      "ZonesLogsType": {
        "type": "string",
        "description": "詳細説明は**[こちら](#tag/logs-(zones))**",
        "enum": [
          "service",
          "record",
          "dnssec"
        ]
      },
      "ZonesLogsOperation": {
        "type": "string",
        "description": "詳細説明は**[こちら](#tag/logs-(zones))**",
        "enum": [
          "updating_default_ttl",
          "dismiss_default_ttl_change",
          "update_dnssec_configuration",
          "begin_ksk_rollover",
          "adding_record",
          "updating_record",
          "deleting_record",
          "dismiss_record_change",
          "update_zone_proxy",
          "update_zone_description",
          "update_zone_favorite",
          "commit_zone",
          "upload_zone",
          "dismiss_zone_edits",
          "create_delegations"
        ]
      },
      "ZonesLogsStatus": {
        "type": "string",
        "description": "詳細説明は**[こちら](#tag/logs-(zones))**",
        "enum": [
          "start",
          "success",
          "failure",
          "retry"
        ]
      },
      "ZonesLog": {
        "type": "object",
        "required": [
          "time",
          "log_type",
          "operator",
          "operation",
          "target",
          "request_id",
          "status"
        ],
        "properties": {
          "time": {
            "$ref": "#/components/schemas/LogDateTime"
          },
          "log_type": {
            "$ref": "#/components/schemas/ZonesLogsType"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "operation": {
            "$ref": "#/components/schemas/ZonesLogsOperation"
          },
          "target": {
            "$ref": "#/components/schemas/LogTarget"
          },
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "status": {
            "$ref": "#/components/schemas/ZonesLogsStatus"
          }
        }
      },
      "GetZonesLogs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ZonesLog"
            }
          }
        }
      },
      "RecordsName": {
        "type": "string",
        "description": "name",
        "minLength": 1,
        "maxLength": 255
      },
      "RecordsTtl": {
        "type": "integer",
        "description": "TTL",
        "nullable": true,
        "default": null,
        "minimum": 1,
        "maximum": 2147483647
      },
      "RecordsRrtype": {
        "type": "string",
        "description": "レコードタイプ",
        "enum": [
          "A",
          "AAAA",
          "ANAME",
          "CAA",
          "CNAME",
          "DS",
          "HTTPS",
          "MX",
          "NAPTR",
          "NS",
          "PTR",
          "SOA",
          "SRV",
          "SVCB",
          "TLSA",
          "TXT"
        ]
      },
      "RecordsRdata": {
        "type": "array",
        "description": "レコードの値",
        "minItems": 1,
        "items": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      },
      "RecordsState": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/records)**",
        "enum": [
          0,
          1,
          2,
          3,
          5
        ]
      },
      "Record": {
        "type": "object",
        "required": [
          "id",
          "name",
          "ttl",
          "rrtype",
          "rdata",
          "state",
          "description",
          "operator"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "name": {
            "$ref": "#/components/schemas/RecordsName"
          },
          "ttl": {
            "$ref": "#/components/schemas/RecordsTtl"
          },
          "rrtype": {
            "$ref": "#/components/schemas/RecordsRrtype"
          },
          "rdata": {
            "$ref": "#/components/schemas/RecordsRdata"
          },
          "state": {
            "$ref": "#/components/schemas/RecordsState"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          }
        }
      },
      "GetRecords": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Record"
            }
          }
        }
      },
      "PostRecord": {
        "type": "object",
        "required": [
          "name",
          "rrtype",
          "rdata"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/RecordsName"
          },
          "ttl": {
            "$ref": "#/components/schemas/RecordsTtl"
          },
          "rrtype": {
            "type": "string",
            "description": "レコードタイプ",
            "enum": [
              "A",
              "AAAA",
              "CAA",
              "CNAME",
              "DS",
              "NS",
              "MX",
              "NAPTR",
              "SRV",
              "TXT",
              "TLSA",
              "ANAME",
              "PTR"
            ]
          },
          "rdata": {
            "$ref": "#/components/schemas/RecordsRdata"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetRecordsDiffs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "new",
                "old"
              ],
              "properties": {
                "new": {
                  "$ref": "#/components/schemas/Record"
                },
                "old": {
                  "$ref": "#/components/schemas/Record"
                }
              }
            }
          }
        }
      },
      "GetRecord": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Record"
          }
        }
      },
      "PatchRecord": {
        "type": "object",
        "properties": {
          "ttl": {
            "$ref": "#/components/schemas/RecordsTtl"
          },
          "rdata": {
            "$ref": "#/components/schemas/RecordsRdata"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "ZoneHistoriesCommittedAt": {
        "type": "string",
        "format": "date-time"
      },
      "ZoneHistoriesText": {
        "type": "string"
      },
      "ZoneHistory": {
        "type": "object",
        "required": [
          "id",
          "committed_at",
          "description",
          "operator"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "committed_at": {
            "$ref": "#/components/schemas/ZoneHistoriesCommittedAt"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          }
        }
      },
      "ZoneHistoryText": {
        "type": "object",
        "required": [
          "id",
          "committed_at",
          "description",
          "operator",
          "text"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "committed_at": {
            "$ref": "#/components/schemas/ZoneHistoriesCommittedAt"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "text": {
            "$ref": "#/components/schemas/ZoneHistoriesCommittedAt"
          }
        }
      },
      "GetZoneHistories": {
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ZoneHistory"
            }
          }
        }
      },
      "GetZoneHistoriesText": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/ZoneHistoryText"
          }
        }
      },
      "ZoneProxyStatus": {
        "type": "string",
        "description": "詳細説明は**[こちら](#tag/zone_proxy)**",
        "enum": [
          "success",
          "fail"
        ]
      },
      "ZoneProxyEnabled": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/zone_proxy)**",
        "enum": [
          0,
          1
        ]
      },
      "ZoneProxy": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/ZoneProxyEnabled"
          }
        }
      },
      "ZoneProxyHealth": {
        "type": "object",
        "required": [
          "address",
          "status",
          "tsig_name",
          "enabled"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/CcPrimaryAddress"
          },
          "status": {
            "$ref": "#/components/schemas/ZoneProxyStatus"
          },
          "tsig_name": {
            "$ref": "#/components/schemas/TsigsName"
          },
          "enabled": {
            "$ref": "#/components/schemas/ZoneProxyEnabled"
          }
        }
      },
      "GetZoneProxy": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/ZoneProxy"
          }
        }
      },
      "PatchZoneProxy": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/ZoneProxyEnabled"
          }
        }
      },
      "GetZoneProxyHealth": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ZoneProxyHealth"
            }
          }
        }
      },
      "ZonesName": {
        "type": "string",
        "description": "name",
        "minLength": 1,
        "maxLength": 254
      },
      "ZonesFavorite": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/zones)**",
        "enum": [
          1,
          2
        ]
      },
      "ZonesState": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/zones)**",
        "enum": [
          1,
          2
        ]
      },
      "ZonesEnabled": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/zones)**",
        "enum": [
          0,
          1
        ]
      },
      "Zone": {
        "type": "object",
        "required": [
          "id",
          "common_config_id",
          "service_code",
          "state",
          "favorite",
          "name",
          "network",
          "description",
          "zone_proxy_enabled"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "common_config_id": {
            "$ref": "#/components/schemas/Id"
          },
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "state": {
            "$ref": "#/components/schemas/ZonesState"
          },
          "favorite": {
            "$ref": "#/components/schemas/ZonesFavorite"
          },
          "name": {
            "$ref": "#/components/schemas/ZonesName"
          },
          "network": {
            "$ref": "#/components/schemas/Network"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "zone_proxy_enabled": {
            "$ref": "#/components/schemas/ZonesEnabled"
          }
        }
      },
      "GetZones": {
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Zone"
            }
          }
        }
      },
      "GetZone": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Zone"
          }
        }
      },
      "PatchZone": {
        "type": "object",
        "properties": {
          "favorite": {
            "$ref": "#/components/schemas/ZonesFavorite"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "PatchZoneCommit": {
        "type": "object",
        "properties": {
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetManagedServers": {
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DelegationsFavorite": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/delegations)**",
        "enum": [
          1,
          2
        ]
      },
      "DelegationsRequested": {
        "type": "integer",
        "description": "詳細説明は**[こちら](#tag/delegations)**",
        "enum": [
          0,
          1
        ]
      },
      "DelegationsRequestedAt": {
        "type": "string",
        "format": "date-time"
      },
      "Delegation": {
        "type": "object",
        "required": [
          "id",
          "service_code",
          "name",
          "network",
          "description",
          "delegation_requested_at"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "name": {
            "$ref": "#/components/schemas/ZonesName"
          },
          "network": {
            "$ref": "#/components/schemas/Network"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "delegation_requested_at": {
            "$ref": "#/components/schemas/DelegationsRequestedAt"
          }
        }
      },
      "GetDelegations": {
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Delegation"
            }
          }
        }
      },
      "PostDelegations": {
        "required": [
          "zone_ids"
        ],
        "properties": {
          "zone_ids": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/SystemId"
            }
          }
        }
      },
      "GetJobs": {
        "type": "object",
        "required": [
          "request_id",
          "status"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "status": {
            "type": "string",
            "description": "詳細説明は**[こちら](#tag/jobs)**",
            "enum": [
              "RUNNING",
              "SUCCESSFUL",
              "FAILED"
            ]
          },
          "resources_url": {
            "description": "status: SUCCESSFULの場合のみ、レスポンスに含まれます",
            "type": "string"
          },
          "error_type": {
            "description": "status: FAILEDの場合のみ、レスポンスに含まれます",
            "type": "string"
          },
          "error_message": {
            "description": "status: FAILEDの場合のみ、レスポンスに含まれます",
            "type": "string"
          }
        }
      },
      "GetPing": {
        "type": "object",
        "required": [
          "request_id"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          }
        }
      }
    },
    "examples": {
      "AsyncResponse": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "jobs_url": "https://api.dns-platform.jp/dpf/v1/jobs/{RequestId}"
        }
      },
      "BadRequest": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "error_type": "Bad Request",
          "error_massage": "There are invalid parameters",
          "error_details": [
            {
              "code": "invalid",
              "attribute": "schema"
            }
          ]
        }
      },
      "GetCount": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "count": 10
          }
        }
      },
      "GetCcPrimaries": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "address": "192.0.2.0",
              "tsig_id": 1234,
              "enabled": 0
            },
            {
              "id": 1235,
              "address": "198.51.100.0",
              "tsig_id": null,
              "enabled": 1
            }
          ]
        }
      },
      "PostCcPrimary": {
        "value": {
          "tsig_id": 1234,
          "address": "192.0.2.0"
        }
      },
      "GetCcPrimary": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "address": "192.0.2.0",
            "tsig_id": 1234,
            "enabled": 0
          }
        }
      },
      "PatchCcPrimary": {
        "value": {
          "enabled": 1
        }
      },
      "GetCcSecNotifiedServers": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "address": "192.0.2.0",
              "tsig_id": 1234
            },
            {
              "id": 1235,
              "address": "198.51.100.0",
              "tsig_id": null
            }
          ]
        }
      },
      "PostCcSecNotifiedServer": {
        "value": {
          "tsig_id": 1234,
          "address": "192.0.2.0"
        }
      },
      "GetCcSecNotifiedServer": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "address": "192.0.2.0",
            "tsig_id": 1234
          }
        }
      },
      "PatchCcSecNotifiedServer": {
        "value": {
          "address": "198.51.100.0"
        }
      },
      "GetCcSecTransferAcls": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "network": "192.0.2.0/24",
              "tsig_id": 1234
            },
            {
              "id": 1235,
              "network": "198.51.100.0/24",
              "tsig_id": null
            }
          ]
        }
      },
      "PostCcSecTransferAcl": {
        "value": {
          "network": "192.0.2.0/24",
          "tsig_id": 1234
        }
      },
      "GetCcSecTransferAcl": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "network": "192.0.2.0/24",
            "tsig_id": 1234
          }
        }
      },
      "PatchCcSecTransferAcl": {
        "value": {
          "network": "192.0.2.0/24",
          "tsig_id": 1234
        }
      },
      "GetCommonConfigs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "name": "name1",
              "managed_dns_enabled": 0,
              "default": 1,
              "description": ""
            },
            {
              "id": 1235,
              "name": "name2",
              "managed_dns_enabled": 0,
              "default": 0,
              "description": ""
            }
          ]
        }
      },
      "PostCommonConfig": {
        "value": {
          "name": "name",
          "description": ""
        }
      },
      "GetCommonConfig": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "name": "name",
            "managed_dns_enabled": 0,
            "default": 1,
            "description": ""
          }
        }
      },
      "PatchCommonConfig": {
        "value": {
          "name": "name"
        }
      },
      "PatchDefaultCommonConfig": {
        "value": {
          "common_config_id": 1234
        }
      },
      "PatchManagedDns": {
        "value": {
          "managed_dns_enabled": 1
        }
      },
      "GetContracts": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "fxxxxxxxxxxxxx",
              "service_code": "dpfxxxxxxxx",
              "state": 1,
              "favorite": 1,
              "plan": 2,
              "description": ""
            },
            {
              "id": "fyyyyyyyyyyyyy",
              "service_code": "dpfyyyyyyyy",
              "state": 2,
              "favorite": 2,
              "plan": 1,
              "description": ""
            }
          ]
        }
      },
      "GetContract": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": "fxxxxxxxxxxxxx",
            "service_code": "dpfxxxxxxxx",
            "state": 1,
            "favorite": 1,
            "plan": 2,
            "description": ""
          }
        }
      },
      "PatchContract": {
        "value": {
          "favorite": 2
        }
      },
      "GetContractsLogs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "time": "2020-01-01T00:00:00.000+09:00",
              "log_type": "service",
              "operator": "iij-taro@example.jp",
              "operation": "update_contract_description",
              "target": "",
              "request_id": "782d746ac3cb46499b31708fa80e8660",
              "status": "success"
            },
            {
              "time": "2020-01-01T00:01:00.000+09:00",
              "log_type": "common_config",
              "operator": "iij-taro@example.jp",
              "operation": "update_common_config",
              "target": "default",
              "request_id": "782d746ac3cb46499b31708fa80e8660",
              "status": "start"
            }
          ]
        }
      },
      "GetContractPartners": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "service_code": "iidxxxxxxxx"
            }
          ]
        }
      },
      "PatchContractsZones": {
        "value": {
          "common_config_id": 1234,
          "zone_ids": [
            "mxxxxxxxxxxxxxx",
            "myyyyyyyyyyyyyy"
          ]
        }
      },
      "GetDnssec": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "enabled": 1,
            "state": 2,
            "ds_state": 3
          }
        }
      },
      "PatchDnssec": {
        "value": {
          "enabled": 1
        }
      },
      "GetDsRecords": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "rrset": "example.com. IN DS 1234 8 2 E8.....",
              "transited_at": "2020-01-01T01:02:03:000Z"
            }
          ]
        }
      },
      "GetQpsHistories": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "service_code": "dpfxxxxxxxx",
              "name": null,
              "values": [
                {
                  "month": "2019-01",
                  "qps": 0
                },
                {
                  "month": "2019-02",
                  "qps": 10
                },
                {
                  "month": "2019-03",
                  "qps": 20
                },
                {
                  "month": "2019-04",
                  "qps": 30
                },
                {
                  "month": "2019-05",
                  "qps": 40
                },
                {
                  "month": "2019-06",
                  "qps": 50
                },
                {
                  "month": "2019-07",
                  "qps": 60
                },
                {
                  "month": "2019-08",
                  "qps": 70
                },
                {
                  "month": "2019-09",
                  "qps": 80
                },
                {
                  "month": "2019-10",
                  "qps": 90
                },
                {
                  "month": "2019-11",
                  "qps": 110
                },
                {
                  "month": "2019-12",
                  "qps": 120
                }
              ]
            },
            {
              "service_code": "dpmyyyyyyyy",
              "name": "name1.example.com.",
              "values": [
                {
                  "month": "2019-01",
                  "qps": 0
                },
                {
                  "month": "2019-02",
                  "qps": 10
                },
                {
                  "month": "2019-03",
                  "qps": 20
                },
                {
                  "month": "2019-04",
                  "qps": 30
                },
                {
                  "month": "2019-05",
                  "qps": 40
                },
                {
                  "month": "2019-06",
                  "qps": 50
                },
                {
                  "month": "2019-07",
                  "qps": 60
                },
                {
                  "month": "2019-08",
                  "qps": 70
                },
                {
                  "month": "2019-09",
                  "qps": 80
                },
                {
                  "month": "2019-10",
                  "qps": 90
                },
                {
                  "month": "2019-11",
                  "qps": 110
                },
                {
                  "month": "2019-12",
                  "qps": 120
                }
              ]
            }
          ]
        }
      },
      "GetTsigs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "1234",
              "name": "name1.fxxxxxxxxxxxxx.d-53.net.",
              "algorithm": 0,
              "secret": "YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNTY3ODk=",
              "description": ""
            },
            {
              "id": "1235",
              "name": "name2.fxxxxxxxxxxxxx.d-53.net.",
              "algorithm": 0,
              "secret": "MDEyMzU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo=",
              "description": ""
            }
          ]
        }
      },
      "PostTsig": {
        "value": {
          "name": "name",
          "description": ""
        }
      },
      "GetTsig": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": "1234",
            "name": "name.fxxxxxxxxxxxxx.d-53.net.",
            "algorithm": 0,
            "secret": "YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNTY3ODk=",
            "description": ""
          }
        }
      },
      "PatchTsig": {
        "value": {
          "description": "description"
        }
      },
      "GetCommonConfigsTsig": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "name": "name1",
              "managed_dns_enabled": 0,
              "default": 1,
              "description": ""
            },
            {
              "id": 1235,
              "name": "name2",
              "managed_dns_enabled": 0,
              "default": 0,
              "description": ""
            }
          ]
        }
      },
      "GetDefaultTtl": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "value": 28800,
            "state": 0,
            "operator": null
          }
        }
      },
      "PatchDefaultTtl": {
        "value": {
          "value": 28800
        }
      },
      "GetDiffsDefaultTtl": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "new": {
                "value": 28800,
                "state": 3,
                "operator": "SAXXXXXXX"
              },
              "old": {
                "value": 800,
                "state": 5,
                "operator": null
              }
            }
          ]
        }
      },
      "GetZonesLogs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "time": "2020-01-01T00:00:00.000+09:00",
              "log_type": "service",
              "operator": "iij-taro@example.jp",
              "operation": "update_zone_proxy",
              "target": "example.com.",
              "request_id": "782d746ac3cb46499b31708fa80e8660",
              "status": "success"
            },
            {
              "time": "2020-01-01T00:01:00.000+09:00",
              "log_type": "record",
              "operator": "iij-taro@example.jp",
              "operation": "updating_default_ttl",
              "target": "",
              "request_id": "782d746ac3cb46499b31708fa80e8660",
              "status": "start"
            }
          ]
        }
      },
      "GetRecords": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "rxxxxxxxxxxxxx",
              "name": "example.com",
              "ttl": null,
              "rrtype": "SOA",
              "rdata": [
                {
                  "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300"
                }
              ],
              "state": 0,
              "description": "",
              "operator": null
            },
            {
              "id": "ryyyyyyyyyyyyy",
              "name": "example.com",
              "ttl": null,
              "rrtype": "NS",
              "rdata": [
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.jp."
                },
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.org."
                },
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
                }
              ],
              "state": 0,
              "description": "",
              "operator": null
            }
          ]
        }
      },
      "PostRecord": {
        "value": {
          "name": "example.com",
          "rrtype": "A",
          "rdata": [
            {
              "value": "192.0.2.0"
            }
          ],
          "description": ""
        }
      },
      "GetRecord": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": "rxxxxxxxxxxxxx",
            "name": "example.com",
            "ttl": null,
            "rrtype": "SOA",
            "rdata": [
              {
                "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300"
              }
            ],
            "state": 0,
            "description": "",
            "operator": null
          }
        }
      },
      "PatchRecord": {
        "value": {
          "ttl": 12345678
        }
      },
      "GetRecordsDiffs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "new": {
                "id": "rxxxxxxxxxxxxx",
                "name": "example.com",
                "ttl": 100,
                "rrtype": "SOA",
                "rdata": [
                  {
                    "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300"
                  }
                ],
                "state": 3,
                "description": "",
                "operator": "SAXXXXXXX"
              },
              "old": {
                "id": "rxxxxxxxxxxxxx",
                "name": "example.com",
                "ttl": null,
                "rrtype": "SOA",
                "rdata": [
                  {
                    "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300"
                  }
                ],
                "state": 5,
                "description": "",
                "operator": null
              }
            },
            {
              "new": {
                "id": "ryyyyyyyyyyyyy",
                "name": "example.com",
                "ttl": 100,
                "rrtype": "NS",
                "rdata": [
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.jp."
                  },
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.org."
                  },
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
                  }
                ],
                "state": 3,
                "description": "",
                "operator": "SAXXXXXXX"
              },
              "old": {
                "id": "ryyyyyyyyyyyyy",
                "name": "example.com",
                "ttl": null,
                "rrtype": "NS",
                "rdata": [
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.jp."
                  },
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.org."
                  },
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
                  }
                ],
                "state": 5,
                "description": "",
                "operator": null
              }
            }
          ]
        }
      },
      "GetZoneHistories": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "committed_at": "2020-01-01T01:02:03:000Z",
              "description": "",
              "operator": "SAXXXXXXX"
            },
            {
              "id": 1235,
              "committed_at": "2020-01-02T01:02:03:000Z",
              "description": "",
              "operator": "SAXXXXXXX"
            }
          ]
        }
      },
      "GetZoneHistoriesText": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "committed_at": "2020-01-01T01:02:03:000Z",
            "description": "",
            "operator": "SAXXXXXXX",
            "text": "$TTL 28800\nexample.com.  IN SOA ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300\nexample.com.  IN NS ns001-xxxxxxxxxxxxxxxx.x.d-53.jp.\nexample.com.  IN NS ns001-xxxxxxxxxxxxxxxx.x.d-53.org.\nexample.com.  IN NS ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
          }
        }
      },
      "GetZoneProxy": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "enabled": 1
          }
        }
      },
      "PatchZoneProxy": {
        "value": {
          "enabled": 0
        }
      },
      "GetHealthCheck": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": [
            {
              "address": "192.0.2.0",
              "status": "NG",
              "tsig_nae": "name1.fxxxxxxxxxxxxx.d-53.net.",
              "enabled": 1
            },
            {
              "address": "198.51.100.0",
              "status": "OK",
              "tsig_nae": "name2.fxxxxxxxxxxxxx.d-53.net.",
              "enabled": 1
            }
          ]
        }
      },
      "GetZones": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "mxxxxxxxxxxxxx",
              "common_config_id": 1234,
              "service_code": "dpmxxxxxxxx",
              "state": 1,
              "favorite": 1,
              "name": "name1.example.com.",
              "network": null,
              "description": "",
              "zone_proxy_enabled": 0
            },
            {
              "id": "myyyyyyyyyyyyy",
              "common_config_id": 1235,
              "service_code": "dpmyyyyyyyy",
              "state": 1,
              "favorite": 2,
              "network": null,
              "name": "name2.example.com.",
              "description": "",
              "zone_proxy_enabled": 0
            }
          ]
        }
      },
      "GetZone": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": "mxxxxxxxxxxxxx",
            "common_config_id": 1234,
            "service_code": "dpmxxxxxxxx",
            "state": 1,
            "favorite": 1,
            "name": "name.example.com.",
            "network": null,
            "description": "",
            "zone_proxy_enabled": 0
          }
        }
      },
      "PatchZone": {
        "value": {
          "favorite": 2
        }
      },
      "PatchZoneCommit": {
        "value": {
          "description": "description"
        }
      },
      "GetManagedServers": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            "ns001-xxxxxxxxxxxxxxxx.x.d-53.jp.",
            "ns001-xxxxxxxxxxxxxxxx.x.d-53.org.",
            "ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
          ]
        }
      },
      "GetDelegations": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "mxxxxxxxxxxxxx",
              "service_code\"": "dpmxxxxxxxx",
              "favorite\"": 1,
              "name\"": "name1.example.com.",
              "network": null,
              "description": "",
              "delegation_requested_at": "2020-01-01T01:02:03:000Z"
            },
            {
              "id": "myyyyyyyyyyyyy",
              "service_code\"": "dpmyyyyyyyy",
              "favorite\"": 2,
              "name\"": "name2.example.com.",
              "network": null,
              "description": "",
              "delegation_requested_at": ""
            }
          ]
        }
      },
      "PostDelegations": {
        "value": {
          "zone_ids": [
            "mxxxxxxxxxxxxx",
            "myyyyyyyyyyyyy"
          ]
        }
      },
      "GetJobsRunning": {
        "summary": "jobs status is \"RUNNING\" examples",
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "status": "RUNNING"
        }
      },
      "GetJobsSuccessful": {
        "summary": "jobs status is \"SUCCESSFUL\" examples",
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "status": "SUCCESSFUL",
          "resources_url": "https://api.dns-platform.jp/dpf/v1/{RESOURCES_PATH}"
        }
      },
      "GetJobsFailed": {
        "summary": "jobs status is \"FAILED\" examples",
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "status": "FAILED",
          "error_type": "Bad Request",
          "error_message": "There are invalid parameters"
        }
      },
      "GetPing": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660"
        }
      }
    }
  }
}